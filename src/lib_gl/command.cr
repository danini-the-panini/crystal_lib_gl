# lib_gl
# * http://github.com/jellymann/crystal_lib_gl
#
# [NOTICE] This is an automatically generated file.
require "./types"

{% if flag?(:apple) %}
@[Link(framework: "OpenGL")]
{% else %}
@[Link("GL")]
{% end %}
lib LibGL

  fun cullFace = glCullFace(mode : Enum) : Void
  fun frontFace = glFrontFace(mode : Enum) : Void
  fun hint = glHint(target : Enum, mode : Enum) : Void
  fun lineWidth = glLineWidth(width : Float) : Void
  fun pointSize = glPointSize(size : Float) : Void
  fun polygonMode = glPolygonMode(face : Enum, mode : Enum) : Void
  fun scissor = glScissor(x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun texParameterf = glTexParameterf(target : Enum, pname : Enum, param : Float) : Void
  fun texParameterfv = glTexParameterfv(target : Enum, pname : Enum, params : Float*) : Void
  fun texParameteri = glTexParameteri(target : Enum, pname : Enum, param : Int) : Void
  fun texParameteriv = glTexParameteriv(target : Enum, pname : Enum, params : Int*) : Void
  fun texImage1D = glTexImage1D(target : Enum, level : Int, internalformat : Int, width : SizeI, border : Int, format : Enum, type : Enum, pixels : Void**) : Void
  fun texImage2D = glTexImage2D(target : Enum, level : Int, internalformat : Int, width : SizeI, height : SizeI, border : Int, format : Enum, type : Enum, pixels : Void**) : Void
  fun drawBuffer = glDrawBuffer(buf : Enum) : Void
  fun clear = glClear(mask : BitField) : Void
  fun clearColor = glClearColor(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun clearStencil = glClearStencil(s : Int) : Void
  fun clearDepth = glClearDepth(depth : Double) : Void
  fun stencilMask = glStencilMask(mask : UInt) : Void
  fun colorMask = glColorMask(red : Boolean, green : Boolean, blue : Boolean, alpha : Boolean) : Void
  fun depthMask = glDepthMask(flag : Boolean) : Void
  fun disable = glDisable(cap : Enum) : Void
  fun enable = glEnable(cap : Enum) : Void
  fun finish = glFinish() : Void
  fun flush = glFlush() : Void
  fun blendFunc = glBlendFunc(sfactor : Enum, dfactor : Enum) : Void
  fun logicOp = glLogicOp(opcode : Enum) : Void
  fun stencilFunc = glStencilFunc(func : Enum, ref : Int, mask : UInt) : Void
  fun stencilOp = glStencilOp(fail : Enum, zfail : Enum, zpass : Enum) : Void
  fun depthFunc = glDepthFunc(func : Enum) : Void
  fun pixelStoref = glPixelStoref(pname : Enum, param : Float) : Void
  fun pixelStorei = glPixelStorei(pname : Enum, param : Int) : Void
  fun readBuffer = glReadBuffer(src : Enum) : Void
  fun readPixels = glReadPixels(x : Int, y : Int, width : SizeI, height : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun getBooleanv = glGetBooleanv(pname : Enum, data : Boolean*) : Void
  fun getDoublev = glGetDoublev(pname : Enum, data : Double*) : Void
  fun getError = glGetError() : Enum
  fun getFloatv = glGetFloatv(pname : Enum, data : Float*) : Void
  fun getIntegerv = glGetIntegerv(pname : Enum, data : Int*) : Void
  fun getString = glGetString(name : Enum) : UByte*
  fun getTexImage = glGetTexImage(target : Enum, level : Int, format : Enum, type : Enum, pixels : Void**) : Void
  fun getTexParameterfv = glGetTexParameterfv(target : Enum, pname : Enum, params : Float*) : Void
  fun getTexParameteriv = glGetTexParameteriv(target : Enum, pname : Enum, params : Int*) : Void
  fun getTexLevelParameterfv = glGetTexLevelParameterfv(target : Enum, level : Int, pname : Enum, params : Float*) : Void
  fun getTexLevelParameteriv = glGetTexLevelParameteriv(target : Enum, level : Int, pname : Enum, params : Int*) : Void
  fun isEnabled = glIsEnabled(cap : Enum) : Boolean
  fun depthRange = glDepthRange(near : Double, far : Double) : Void
  fun viewport = glViewport(x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun newList = glNewList(list : UInt, mode : Enum) : Void
  fun endList = glEndList() : Void
  fun callList = glCallList(list : UInt) : Void
  fun callLists = glCallLists(n : SizeI, type : Enum, lists : Void**) : Void
  fun deleteLists = glDeleteLists(list : UInt, range : SizeI) : Void
  fun genLists = glGenLists(range : SizeI) : UInt
  fun listBase = glListBase(base : UInt) : Void
  fun begin = glBegin(mode : Enum) : Void
  fun bitmap = glBitmap(width : SizeI, height : SizeI, xorig : Float, yorig : Float, xmove : Float, ymove : Float, bitmap : UByte*) : Void
  fun color3b = glColor3b(red : Byte, green : Byte, blue : Byte) : Void
  fun color3bv = glColor3bv(v : Byte*) : Void
  fun color3d = glColor3d(red : Double, green : Double, blue : Double) : Void
  fun color3dv = glColor3dv(v : Double*) : Void
  fun color3f = glColor3f(red : Float, green : Float, blue : Float) : Void
  fun color3fv = glColor3fv(v : Float*) : Void
  fun color3i = glColor3i(red : Int, green : Int, blue : Int) : Void
  fun color3iv = glColor3iv(v : Int*) : Void
  fun color3s = glColor3s(red : Short, green : Short, blue : Short) : Void
  fun color3sv = glColor3sv(v : Short*) : Void
  fun color3ub = glColor3ub(red : UByte, green : UByte, blue : UByte) : Void
  fun color3ubv = glColor3ubv(v : UByte*) : Void
  fun color3ui = glColor3ui(red : UInt, green : UInt, blue : UInt) : Void
  fun color3uiv = glColor3uiv(v : UInt*) : Void
  fun color3us = glColor3us(red : UShort, green : UShort, blue : UShort) : Void
  fun color3usv = glColor3usv(v : UShort*) : Void
  fun color4b = glColor4b(red : Byte, green : Byte, blue : Byte, alpha : Byte) : Void
  fun color4bv = glColor4bv(v : Byte*) : Void
  fun color4d = glColor4d(red : Double, green : Double, blue : Double, alpha : Double) : Void
  fun color4dv = glColor4dv(v : Double*) : Void
  fun color4f = glColor4f(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun color4fv = glColor4fv(v : Float*) : Void
  fun color4i = glColor4i(red : Int, green : Int, blue : Int, alpha : Int) : Void
  fun color4iv = glColor4iv(v : Int*) : Void
  fun color4s = glColor4s(red : Short, green : Short, blue : Short, alpha : Short) : Void
  fun color4sv = glColor4sv(v : Short*) : Void
  fun color4ub = glColor4ub(red : UByte, green : UByte, blue : UByte, alpha : UByte) : Void
  fun color4ubv = glColor4ubv(v : UByte*) : Void
  fun color4ui = glColor4ui(red : UInt, green : UInt, blue : UInt, alpha : UInt) : Void
  fun color4uiv = glColor4uiv(v : UInt*) : Void
  fun color4us = glColor4us(red : UShort, green : UShort, blue : UShort, alpha : UShort) : Void
  fun color4usv = glColor4usv(v : UShort*) : Void
  fun edgeFlag = glEdgeFlag(flag : Boolean) : Void
  fun edgeFlagv = glEdgeFlagv(flag : Boolean*) : Void
  fun end = glEnd() : Void
  fun indexd = glIndexd(c : Double) : Void
  fun indexdv = glIndexdv(c : Double*) : Void
  fun indexf = glIndexf(c : Float) : Void
  fun indexfv = glIndexfv(c : Float*) : Void
  fun indexi = glIndexi(c : Int) : Void
  fun indexiv = glIndexiv(c : Int*) : Void
  fun indexs = glIndexs(c : Short) : Void
  fun indexsv = glIndexsv(c : Short*) : Void
  fun normal3b = glNormal3b(nx : Byte, ny : Byte, nz : Byte) : Void
  fun normal3bv = glNormal3bv(v : Byte*) : Void
  fun normal3d = glNormal3d(nx : Double, ny : Double, nz : Double) : Void
  fun normal3dv = glNormal3dv(v : Double*) : Void
  fun normal3f = glNormal3f(nx : Float, ny : Float, nz : Float) : Void
  fun normal3fv = glNormal3fv(v : Float*) : Void
  fun normal3i = glNormal3i(nx : Int, ny : Int, nz : Int) : Void
  fun normal3iv = glNormal3iv(v : Int*) : Void
  fun normal3s = glNormal3s(nx : Short, ny : Short, nz : Short) : Void
  fun normal3sv = glNormal3sv(v : Short*) : Void
  fun rasterPos2d = glRasterPos2d(x : Double, y : Double) : Void
  fun rasterPos2dv = glRasterPos2dv(v : Double*) : Void
  fun rasterPos2f = glRasterPos2f(x : Float, y : Float) : Void
  fun rasterPos2fv = glRasterPos2fv(v : Float*) : Void
  fun rasterPos2i = glRasterPos2i(x : Int, y : Int) : Void
  fun rasterPos2iv = glRasterPos2iv(v : Int*) : Void
  fun rasterPos2s = glRasterPos2s(x : Short, y : Short) : Void
  fun rasterPos2sv = glRasterPos2sv(v : Short*) : Void
  fun rasterPos3d = glRasterPos3d(x : Double, y : Double, z : Double) : Void
  fun rasterPos3dv = glRasterPos3dv(v : Double*) : Void
  fun rasterPos3f = glRasterPos3f(x : Float, y : Float, z : Float) : Void
  fun rasterPos3fv = glRasterPos3fv(v : Float*) : Void
  fun rasterPos3i = glRasterPos3i(x : Int, y : Int, z : Int) : Void
  fun rasterPos3iv = glRasterPos3iv(v : Int*) : Void
  fun rasterPos3s = glRasterPos3s(x : Short, y : Short, z : Short) : Void
  fun rasterPos3sv = glRasterPos3sv(v : Short*) : Void
  fun rasterPos4d = glRasterPos4d(x : Double, y : Double, z : Double, w : Double) : Void
  fun rasterPos4dv = glRasterPos4dv(v : Double*) : Void
  fun rasterPos4f = glRasterPos4f(x : Float, y : Float, z : Float, w : Float) : Void
  fun rasterPos4fv = glRasterPos4fv(v : Float*) : Void
  fun rasterPos4i = glRasterPos4i(x : Int, y : Int, z : Int, w : Int) : Void
  fun rasterPos4iv = glRasterPos4iv(v : Int*) : Void
  fun rasterPos4s = glRasterPos4s(x : Short, y : Short, z : Short, w : Short) : Void
  fun rasterPos4sv = glRasterPos4sv(v : Short*) : Void
  fun rectd = glRectd(x1 : Double, y1 : Double, x2 : Double, y2 : Double) : Void
  fun rectdv = glRectdv(v1 : Double*, v2 : Double*) : Void
  fun rectf = glRectf(x1 : Float, y1 : Float, x2 : Float, y2 : Float) : Void
  fun rectfv = glRectfv(v1 : Float*, v2 : Float*) : Void
  fun recti = glRecti(x1 : Int, y1 : Int, x2 : Int, y2 : Int) : Void
  fun rectiv = glRectiv(v1 : Int*, v2 : Int*) : Void
  fun rects = glRects(x1 : Short, y1 : Short, x2 : Short, y2 : Short) : Void
  fun rectsv = glRectsv(v1 : Short*, v2 : Short*) : Void
  fun texCoord1d = glTexCoord1d(s : Double) : Void
  fun texCoord1dv = glTexCoord1dv(v : Double*) : Void
  fun texCoord1f = glTexCoord1f(s : Float) : Void
  fun texCoord1fv = glTexCoord1fv(v : Float*) : Void
  fun texCoord1i = glTexCoord1i(s : Int) : Void
  fun texCoord1iv = glTexCoord1iv(v : Int*) : Void
  fun texCoord1s = glTexCoord1s(s : Short) : Void
  fun texCoord1sv = glTexCoord1sv(v : Short*) : Void
  fun texCoord2d = glTexCoord2d(s : Double, t : Double) : Void
  fun texCoord2dv = glTexCoord2dv(v : Double*) : Void
  fun texCoord2f = glTexCoord2f(s : Float, t : Float) : Void
  fun texCoord2fv = glTexCoord2fv(v : Float*) : Void
  fun texCoord2i = glTexCoord2i(s : Int, t : Int) : Void
  fun texCoord2iv = glTexCoord2iv(v : Int*) : Void
  fun texCoord2s = glTexCoord2s(s : Short, t : Short) : Void
  fun texCoord2sv = glTexCoord2sv(v : Short*) : Void
  fun texCoord3d = glTexCoord3d(s : Double, t : Double, r : Double) : Void
  fun texCoord3dv = glTexCoord3dv(v : Double*) : Void
  fun texCoord3f = glTexCoord3f(s : Float, t : Float, r : Float) : Void
  fun texCoord3fv = glTexCoord3fv(v : Float*) : Void
  fun texCoord3i = glTexCoord3i(s : Int, t : Int, r : Int) : Void
  fun texCoord3iv = glTexCoord3iv(v : Int*) : Void
  fun texCoord3s = glTexCoord3s(s : Short, t : Short, r : Short) : Void
  fun texCoord3sv = glTexCoord3sv(v : Short*) : Void
  fun texCoord4d = glTexCoord4d(s : Double, t : Double, r : Double, q : Double) : Void
  fun texCoord4dv = glTexCoord4dv(v : Double*) : Void
  fun texCoord4f = glTexCoord4f(s : Float, t : Float, r : Float, q : Float) : Void
  fun texCoord4fv = glTexCoord4fv(v : Float*) : Void
  fun texCoord4i = glTexCoord4i(s : Int, t : Int, r : Int, q : Int) : Void
  fun texCoord4iv = glTexCoord4iv(v : Int*) : Void
  fun texCoord4s = glTexCoord4s(s : Short, t : Short, r : Short, q : Short) : Void
  fun texCoord4sv = glTexCoord4sv(v : Short*) : Void
  fun vertex2d = glVertex2d(x : Double, y : Double) : Void
  fun vertex2dv = glVertex2dv(v : Double*) : Void
  fun vertex2f = glVertex2f(x : Float, y : Float) : Void
  fun vertex2fv = glVertex2fv(v : Float*) : Void
  fun vertex2i = glVertex2i(x : Int, y : Int) : Void
  fun vertex2iv = glVertex2iv(v : Int*) : Void
  fun vertex2s = glVertex2s(x : Short, y : Short) : Void
  fun vertex2sv = glVertex2sv(v : Short*) : Void
  fun vertex3d = glVertex3d(x : Double, y : Double, z : Double) : Void
  fun vertex3dv = glVertex3dv(v : Double*) : Void
  fun vertex3f = glVertex3f(x : Float, y : Float, z : Float) : Void
  fun vertex3fv = glVertex3fv(v : Float*) : Void
  fun vertex3i = glVertex3i(x : Int, y : Int, z : Int) : Void
  fun vertex3iv = glVertex3iv(v : Int*) : Void
  fun vertex3s = glVertex3s(x : Short, y : Short, z : Short) : Void
  fun vertex3sv = glVertex3sv(v : Short*) : Void
  fun vertex4d = glVertex4d(x : Double, y : Double, z : Double, w : Double) : Void
  fun vertex4dv = glVertex4dv(v : Double*) : Void
  fun vertex4f = glVertex4f(x : Float, y : Float, z : Float, w : Float) : Void
  fun vertex4fv = glVertex4fv(v : Float*) : Void
  fun vertex4i = glVertex4i(x : Int, y : Int, z : Int, w : Int) : Void
  fun vertex4iv = glVertex4iv(v : Int*) : Void
  fun vertex4s = glVertex4s(x : Short, y : Short, z : Short, w : Short) : Void
  fun vertex4sv = glVertex4sv(v : Short*) : Void
  fun clipPlane = glClipPlane(plane : Enum, equation : Double*) : Void
  fun colorMaterial = glColorMaterial(face : Enum, mode : Enum) : Void
  fun fogf = glFogf(pname : Enum, param : Float) : Void
  fun fogfv = glFogfv(pname : Enum, params : Float*) : Void
  fun fogi = glFogi(pname : Enum, param : Int) : Void
  fun fogiv = glFogiv(pname : Enum, params : Int*) : Void
  fun lightf = glLightf(light : Enum, pname : Enum, param : Float) : Void
  fun lightfv = glLightfv(light : Enum, pname : Enum, params : Float*) : Void
  fun lighti = glLighti(light : Enum, pname : Enum, param : Int) : Void
  fun lightiv = glLightiv(light : Enum, pname : Enum, params : Int*) : Void
  fun lightModelf = glLightModelf(pname : Enum, param : Float) : Void
  fun lightModelfv = glLightModelfv(pname : Enum, params : Float*) : Void
  fun lightModeli = glLightModeli(pname : Enum, param : Int) : Void
  fun lightModeliv = glLightModeliv(pname : Enum, params : Int*) : Void
  fun lineStipple = glLineStipple(factor : Int, pattern : UShort) : Void
  fun materialf = glMaterialf(face : Enum, pname : Enum, param : Float) : Void
  fun materialfv = glMaterialfv(face : Enum, pname : Enum, params : Float*) : Void
  fun materiali = glMateriali(face : Enum, pname : Enum, param : Int) : Void
  fun materialiv = glMaterialiv(face : Enum, pname : Enum, params : Int*) : Void
  fun polygonStipple = glPolygonStipple(mask : UByte*) : Void
  fun shadeModel = glShadeModel(mode : Enum) : Void
  fun texEnvf = glTexEnvf(target : Enum, pname : Enum, param : Float) : Void
  fun texEnvfv = glTexEnvfv(target : Enum, pname : Enum, params : Float*) : Void
  fun texEnvi = glTexEnvi(target : Enum, pname : Enum, param : Int) : Void
  fun texEnviv = glTexEnviv(target : Enum, pname : Enum, params : Int*) : Void
  fun texGend = glTexGend(coord : Enum, pname : Enum, param : Double) : Void
  fun texGendv = glTexGendv(coord : Enum, pname : Enum, params : Double*) : Void
  fun texGenf = glTexGenf(coord : Enum, pname : Enum, param : Float) : Void
  fun texGenfv = glTexGenfv(coord : Enum, pname : Enum, params : Float*) : Void
  fun texGeni = glTexGeni(coord : Enum, pname : Enum, param : Int) : Void
  fun texGeniv = glTexGeniv(coord : Enum, pname : Enum, params : Int*) : Void
  fun feedbackBuffer = glFeedbackBuffer(size : SizeI, type : Enum, buffer : Float*) : Void
  fun selectBuffer = glSelectBuffer(size : SizeI, buffer : UInt*) : Void
  fun renderMode = glRenderMode(mode : Enum) : Int
  fun initNames = glInitNames() : Void
  fun loadName = glLoadName(name : UInt) : Void
  fun passThrough = glPassThrough(token : Float) : Void
  fun popName = glPopName() : Void
  fun pushName = glPushName(name : UInt) : Void
  fun clearAccum = glClearAccum(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun clearIndex = glClearIndex(c : Float) : Void
  fun indexMask = glIndexMask(mask : UInt) : Void
  fun accum = glAccum(op : Enum, value : Float) : Void
  fun popAttrib = glPopAttrib() : Void
  fun pushAttrib = glPushAttrib(mask : BitField) : Void
  fun map1d = glMap1d(target : Enum, u1 : Double, u2 : Double, stride : Int, order : Int, points : Double*) : Void
  fun map1f = glMap1f(target : Enum, u1 : Float, u2 : Float, stride : Int, order : Int, points : Float*) : Void
  fun map2d = glMap2d(target : Enum, u1 : Double, u2 : Double, ustride : Int, uorder : Int, v1 : Double, v2 : Double, vstride : Int, vorder : Int, points : Double*) : Void
  fun map2f = glMap2f(target : Enum, u1 : Float, u2 : Float, ustride : Int, uorder : Int, v1 : Float, v2 : Float, vstride : Int, vorder : Int, points : Float*) : Void
  fun mapGrid1d = glMapGrid1d(un : Int, u1 : Double, u2 : Double) : Void
  fun mapGrid1f = glMapGrid1f(un : Int, u1 : Float, u2 : Float) : Void
  fun mapGrid2d = glMapGrid2d(un : Int, u1 : Double, u2 : Double, vn : Int, v1 : Double, v2 : Double) : Void
  fun mapGrid2f = glMapGrid2f(un : Int, u1 : Float, u2 : Float, vn : Int, v1 : Float, v2 : Float) : Void
  fun evalCoord1d = glEvalCoord1d(u : Double) : Void
  fun evalCoord1dv = glEvalCoord1dv(u : Double*) : Void
  fun evalCoord1f = glEvalCoord1f(u : Float) : Void
  fun evalCoord1fv = glEvalCoord1fv(u : Float*) : Void
  fun evalCoord2d = glEvalCoord2d(u : Double, v : Double) : Void
  fun evalCoord2dv = glEvalCoord2dv(u : Double*) : Void
  fun evalCoord2f = glEvalCoord2f(u : Float, v : Float) : Void
  fun evalCoord2fv = glEvalCoord2fv(u : Float*) : Void
  fun evalMesh1 = glEvalMesh1(mode : Enum, i1 : Int, i2 : Int) : Void
  fun evalPoint1 = glEvalPoint1(i : Int) : Void
  fun evalMesh2 = glEvalMesh2(mode : Enum, i1 : Int, i2 : Int, j1 : Int, j2 : Int) : Void
  fun evalPoint2 = glEvalPoint2(i : Int, j : Int) : Void
  fun alphaFunc = glAlphaFunc(func : Enum, ref : Float) : Void
  fun pixelZoom = glPixelZoom(xfactor : Float, yfactor : Float) : Void
  fun pixelTransferf = glPixelTransferf(pname : Enum, param : Float) : Void
  fun pixelTransferi = glPixelTransferi(pname : Enum, param : Int) : Void
  fun pixelMapfv = glPixelMapfv(map : Enum, mapsize : SizeI, values : Float*) : Void
  fun pixelMapuiv = glPixelMapuiv(map : Enum, mapsize : SizeI, values : UInt*) : Void
  fun pixelMapusv = glPixelMapusv(map : Enum, mapsize : SizeI, values : UShort*) : Void
  fun copyPixels = glCopyPixels(x : Int, y : Int, width : SizeI, height : SizeI, type : Enum) : Void
  fun drawPixels = glDrawPixels(width : SizeI, height : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun getClipPlane = glGetClipPlane(plane : Enum, equation : Double*) : Void
  fun getLightfv = glGetLightfv(light : Enum, pname : Enum, params : Float*) : Void
  fun getLightiv = glGetLightiv(light : Enum, pname : Enum, params : Int*) : Void
  fun getMapdv = glGetMapdv(target : Enum, query : Enum, v : Double*) : Void
  fun getMapfv = glGetMapfv(target : Enum, query : Enum, v : Float*) : Void
  fun getMapiv = glGetMapiv(target : Enum, query : Enum, v : Int*) : Void
  fun getMaterialfv = glGetMaterialfv(face : Enum, pname : Enum, params : Float*) : Void
  fun getMaterialiv = glGetMaterialiv(face : Enum, pname : Enum, params : Int*) : Void
  fun getPixelMapfv = glGetPixelMapfv(map : Enum, values : Float*) : Void
  fun getPixelMapuiv = glGetPixelMapuiv(map : Enum, values : UInt*) : Void
  fun getPixelMapusv = glGetPixelMapusv(map : Enum, values : UShort*) : Void
  fun getPolygonStipple = glGetPolygonStipple(mask : UByte*) : Void
  fun getTexEnvfv = glGetTexEnvfv(target : Enum, pname : Enum, params : Float*) : Void
  fun getTexEnviv = glGetTexEnviv(target : Enum, pname : Enum, params : Int*) : Void
  fun getTexGendv = glGetTexGendv(coord : Enum, pname : Enum, params : Double*) : Void
  fun getTexGenfv = glGetTexGenfv(coord : Enum, pname : Enum, params : Float*) : Void
  fun getTexGeniv = glGetTexGeniv(coord : Enum, pname : Enum, params : Int*) : Void
  fun isList = glIsList(list : UInt) : Boolean
  fun frustum = glFrustum(left : Double, right : Double, bottom : Double, top : Double, zNear : Double, zFar : Double) : Void
  fun loadIdentity = glLoadIdentity() : Void
  fun loadMatrixf = glLoadMatrixf(m : Float*) : Void
  fun loadMatrixd = glLoadMatrixd(m : Double*) : Void
  fun matrixMode = glMatrixMode(mode : Enum) : Void
  fun multMatrixf = glMultMatrixf(m : Float*) : Void
  fun multMatrixd = glMultMatrixd(m : Double*) : Void
  fun ortho = glOrtho(left : Double, right : Double, bottom : Double, top : Double, zNear : Double, zFar : Double) : Void
  fun popMatrix = glPopMatrix() : Void
  fun pushMatrix = glPushMatrix() : Void
  fun rotated = glRotated(angle : Double, x : Double, y : Double, z : Double) : Void
  fun rotatef = glRotatef(angle : Float, x : Float, y : Float, z : Float) : Void
  fun scaled = glScaled(x : Double, y : Double, z : Double) : Void
  fun scalef = glScalef(x : Float, y : Float, z : Float) : Void
  fun translated = glTranslated(x : Double, y : Double, z : Double) : Void
  fun translatef = glTranslatef(x : Float, y : Float, z : Float) : Void
  fun drawArrays = glDrawArrays(mode : Enum, first : Int, count : SizeI) : Void
  fun drawElements = glDrawElements(mode : Enum, count : SizeI, type : Enum, indices : Void**) : Void
  fun getPointerv = glGetPointerv(pname : Enum, params : Void***) : Void
  fun polygonOffset = glPolygonOffset(factor : Float, units : Float) : Void
  fun copyTexImage1D = glCopyTexImage1D(target : Enum, level : Int, internalformat : Enum, x : Int, y : Int, width : SizeI, border : Int) : Void
  fun copyTexImage2D = glCopyTexImage2D(target : Enum, level : Int, internalformat : Enum, x : Int, y : Int, width : SizeI, height : SizeI, border : Int) : Void
  fun copyTexSubImage1D = glCopyTexSubImage1D(target : Enum, level : Int, xoffset : Int, x : Int, y : Int, width : SizeI) : Void
  fun copyTexSubImage2D = glCopyTexSubImage2D(target : Enum, level : Int, xoffset : Int, yoffset : Int, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun texSubImage1D = glTexSubImage1D(target : Enum, level : Int, xoffset : Int, width : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun texSubImage2D = glTexSubImage2D(target : Enum, level : Int, xoffset : Int, yoffset : Int, width : SizeI, height : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun bindTexture = glBindTexture(target : Enum, texture : UInt) : Void
  fun deleteTextures = glDeleteTextures(n : SizeI, textures : UInt*) : Void
  fun genTextures = glGenTextures(n : SizeI, textures : UInt*) : Void
  fun isTexture = glIsTexture(texture : UInt) : Boolean
  fun arrayElement = glArrayElement(i : Int) : Void
  fun colorPointer = glColorPointer(size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun disableClientState = glDisableClientState(array : Enum) : Void
  fun edgeFlagPointer = glEdgeFlagPointer(stride : SizeI, pointer : Void**) : Void
  fun enableClientState = glEnableClientState(array : Enum) : Void
  fun indexPointer = glIndexPointer(type : Enum, stride : SizeI, pointer : Void**) : Void
  fun interleavedArrays = glInterleavedArrays(format : Enum, stride : SizeI, pointer : Void**) : Void
  fun normalPointer = glNormalPointer(type : Enum, stride : SizeI, pointer : Void**) : Void
  fun texCoordPointer = glTexCoordPointer(size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun vertexPointer = glVertexPointer(size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun areTexturesResident = glAreTexturesResident(n : SizeI, textures : UInt*, residences : Boolean*) : Boolean
  fun prioritizeTextures = glPrioritizeTextures(n : SizeI, textures : UInt*, priorities : Float*) : Void
  fun indexub = glIndexub(c : UByte) : Void
  fun indexubv = glIndexubv(c : UByte*) : Void
  fun popClientAttrib = glPopClientAttrib() : Void
  fun pushClientAttrib = glPushClientAttrib(mask : BitField) : Void
  fun drawRangeElements = glDrawRangeElements(mode : Enum, start : UInt, end : UInt, count : SizeI, type : Enum, indices : Void**) : Void
  fun texImage3D = glTexImage3D(target : Enum, level : Int, internalformat : Int, width : SizeI, height : SizeI, depth : SizeI, border : Int, format : Enum, type : Enum, pixels : Void**) : Void
  fun texSubImage3D = glTexSubImage3D(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun copyTexSubImage3D = glCopyTexSubImage3D(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun activeTexture = glActiveTexture(texture : Enum) : Void
  fun sampleCoverage = glSampleCoverage(value : Float, invert : Boolean) : Void
  fun compressedTexImage3D = glCompressedTexImage3D(target : Enum, level : Int, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI, border : Int, imageSize : SizeI, data : Void**) : Void
  fun compressedTexImage2D = glCompressedTexImage2D(target : Enum, level : Int, internalformat : Enum, width : SizeI, height : SizeI, border : Int, imageSize : SizeI, data : Void**) : Void
  fun compressedTexImage1D = glCompressedTexImage1D(target : Enum, level : Int, internalformat : Enum, width : SizeI, border : Int, imageSize : SizeI, data : Void**) : Void
  fun compressedTexSubImage3D = glCompressedTexSubImage3D(target : Enum, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun compressedTexSubImage2D = glCompressedTexSubImage2D(target : Enum, level : Int, xoffset : Int, yoffset : Int, width : SizeI, height : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun compressedTexSubImage1D = glCompressedTexSubImage1D(target : Enum, level : Int, xoffset : Int, width : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun getCompressedTexImage = glGetCompressedTexImage(target : Enum, level : Int, img : Void**) : Void
  fun clientActiveTexture = glClientActiveTexture(texture : Enum) : Void
  fun multiTexCoord1d = glMultiTexCoord1d(target : Enum, s : Double) : Void
  fun multiTexCoord1dv = glMultiTexCoord1dv(target : Enum, v : Double*) : Void
  fun multiTexCoord1f = glMultiTexCoord1f(target : Enum, s : Float) : Void
  fun multiTexCoord1fv = glMultiTexCoord1fv(target : Enum, v : Float*) : Void
  fun multiTexCoord1i = glMultiTexCoord1i(target : Enum, s : Int) : Void
  fun multiTexCoord1iv = glMultiTexCoord1iv(target : Enum, v : Int*) : Void
  fun multiTexCoord1s = glMultiTexCoord1s(target : Enum, s : Short) : Void
  fun multiTexCoord1sv = glMultiTexCoord1sv(target : Enum, v : Short*) : Void
  fun multiTexCoord2d = glMultiTexCoord2d(target : Enum, s : Double, t : Double) : Void
  fun multiTexCoord2dv = glMultiTexCoord2dv(target : Enum, v : Double*) : Void
  fun multiTexCoord2f = glMultiTexCoord2f(target : Enum, s : Float, t : Float) : Void
  fun multiTexCoord2fv = glMultiTexCoord2fv(target : Enum, v : Float*) : Void
  fun multiTexCoord2i = glMultiTexCoord2i(target : Enum, s : Int, t : Int) : Void
  fun multiTexCoord2iv = glMultiTexCoord2iv(target : Enum, v : Int*) : Void
  fun multiTexCoord2s = glMultiTexCoord2s(target : Enum, s : Short, t : Short) : Void
  fun multiTexCoord2sv = glMultiTexCoord2sv(target : Enum, v : Short*) : Void
  fun multiTexCoord3d = glMultiTexCoord3d(target : Enum, s : Double, t : Double, r : Double) : Void
  fun multiTexCoord3dv = glMultiTexCoord3dv(target : Enum, v : Double*) : Void
  fun multiTexCoord3f = glMultiTexCoord3f(target : Enum, s : Float, t : Float, r : Float) : Void
  fun multiTexCoord3fv = glMultiTexCoord3fv(target : Enum, v : Float*) : Void
  fun multiTexCoord3i = glMultiTexCoord3i(target : Enum, s : Int, t : Int, r : Int) : Void
  fun multiTexCoord3iv = glMultiTexCoord3iv(target : Enum, v : Int*) : Void
  fun multiTexCoord3s = glMultiTexCoord3s(target : Enum, s : Short, t : Short, r : Short) : Void
  fun multiTexCoord3sv = glMultiTexCoord3sv(target : Enum, v : Short*) : Void
  fun multiTexCoord4d = glMultiTexCoord4d(target : Enum, s : Double, t : Double, r : Double, q : Double) : Void
  fun multiTexCoord4dv = glMultiTexCoord4dv(target : Enum, v : Double*) : Void
  fun multiTexCoord4f = glMultiTexCoord4f(target : Enum, s : Float, t : Float, r : Float, q : Float) : Void
  fun multiTexCoord4fv = glMultiTexCoord4fv(target : Enum, v : Float*) : Void
  fun multiTexCoord4i = glMultiTexCoord4i(target : Enum, s : Int, t : Int, r : Int, q : Int) : Void
  fun multiTexCoord4iv = glMultiTexCoord4iv(target : Enum, v : Int*) : Void
  fun multiTexCoord4s = glMultiTexCoord4s(target : Enum, s : Short, t : Short, r : Short, q : Short) : Void
  fun multiTexCoord4sv = glMultiTexCoord4sv(target : Enum, v : Short*) : Void
  fun loadTransposeMatrixf = glLoadTransposeMatrixf(m : Float*) : Void
  fun loadTransposeMatrixd = glLoadTransposeMatrixd(m : Double*) : Void
  fun multTransposeMatrixf = glMultTransposeMatrixf(m : Float*) : Void
  fun multTransposeMatrixd = glMultTransposeMatrixd(m : Double*) : Void
  fun blendFuncSeparate = glBlendFuncSeparate(sfactorRGB : Enum, dfactorRGB : Enum, sfactorAlpha : Enum, dfactorAlpha : Enum) : Void
  fun multiDrawArrays = glMultiDrawArrays(mode : Enum, first : Int*, count : SizeI*, drawcount : SizeI) : Void
  fun multiDrawElements = glMultiDrawElements(mode : Enum, count : SizeI*, type : Enum, indices : Void***, drawcount : SizeI) : Void
  fun pointParameterf = glPointParameterf(pname : Enum, param : Float) : Void
  fun pointParameterfv = glPointParameterfv(pname : Enum, params : Float*) : Void
  fun pointParameteri = glPointParameteri(pname : Enum, param : Int) : Void
  fun pointParameteriv = glPointParameteriv(pname : Enum, params : Int*) : Void
  fun fogCoordf = glFogCoordf(coord : Float) : Void
  fun fogCoordfv = glFogCoordfv(coord : Float*) : Void
  fun fogCoordd = glFogCoordd(coord : Double) : Void
  fun fogCoorddv = glFogCoorddv(coord : Double*) : Void
  fun fogCoordPointer = glFogCoordPointer(type : Enum, stride : SizeI, pointer : Void**) : Void
  fun secondaryColor3b = glSecondaryColor3b(red : Byte, green : Byte, blue : Byte) : Void
  fun secondaryColor3bv = glSecondaryColor3bv(v : Byte*) : Void
  fun secondaryColor3d = glSecondaryColor3d(red : Double, green : Double, blue : Double) : Void
  fun secondaryColor3dv = glSecondaryColor3dv(v : Double*) : Void
  fun secondaryColor3f = glSecondaryColor3f(red : Float, green : Float, blue : Float) : Void
  fun secondaryColor3fv = glSecondaryColor3fv(v : Float*) : Void
  fun secondaryColor3i = glSecondaryColor3i(red : Int, green : Int, blue : Int) : Void
  fun secondaryColor3iv = glSecondaryColor3iv(v : Int*) : Void
  fun secondaryColor3s = glSecondaryColor3s(red : Short, green : Short, blue : Short) : Void
  fun secondaryColor3sv = glSecondaryColor3sv(v : Short*) : Void
  fun secondaryColor3ub = glSecondaryColor3ub(red : UByte, green : UByte, blue : UByte) : Void
  fun secondaryColor3ubv = glSecondaryColor3ubv(v : UByte*) : Void
  fun secondaryColor3ui = glSecondaryColor3ui(red : UInt, green : UInt, blue : UInt) : Void
  fun secondaryColor3uiv = glSecondaryColor3uiv(v : UInt*) : Void
  fun secondaryColor3us = glSecondaryColor3us(red : UShort, green : UShort, blue : UShort) : Void
  fun secondaryColor3usv = glSecondaryColor3usv(v : UShort*) : Void
  fun secondaryColorPointer = glSecondaryColorPointer(size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun windowPos2d = glWindowPos2d(x : Double, y : Double) : Void
  fun windowPos2dv = glWindowPos2dv(v : Double*) : Void
  fun windowPos2f = glWindowPos2f(x : Float, y : Float) : Void
  fun windowPos2fv = glWindowPos2fv(v : Float*) : Void
  fun windowPos2i = glWindowPos2i(x : Int, y : Int) : Void
  fun windowPos2iv = glWindowPos2iv(v : Int*) : Void
  fun windowPos2s = glWindowPos2s(x : Short, y : Short) : Void
  fun windowPos2sv = glWindowPos2sv(v : Short*) : Void
  fun windowPos3d = glWindowPos3d(x : Double, y : Double, z : Double) : Void
  fun windowPos3dv = glWindowPos3dv(v : Double*) : Void
  fun windowPos3f = glWindowPos3f(x : Float, y : Float, z : Float) : Void
  fun windowPos3fv = glWindowPos3fv(v : Float*) : Void
  fun windowPos3i = glWindowPos3i(x : Int, y : Int, z : Int) : Void
  fun windowPos3iv = glWindowPos3iv(v : Int*) : Void
  fun windowPos3s = glWindowPos3s(x : Short, y : Short, z : Short) : Void
  fun windowPos3sv = glWindowPos3sv(v : Short*) : Void
  fun blendColor = glBlendColor(red : Float, green : Float, blue : Float, alpha : Float) : Void
  fun blendEquation = glBlendEquation(mode : Enum) : Void
  fun genQueries = glGenQueries(n : SizeI, ids : UInt*) : Void
  fun deleteQueries = glDeleteQueries(n : SizeI, ids : UInt*) : Void
  fun isQuery = glIsQuery(id : UInt) : Boolean
  fun beginQuery = glBeginQuery(target : Enum, id : UInt) : Void
  fun endQuery = glEndQuery(target : Enum) : Void
  fun getQueryiv = glGetQueryiv(target : Enum, pname : Enum, params : Int*) : Void
  fun getQueryObjectiv = glGetQueryObjectiv(id : UInt, pname : Enum, params : Int*) : Void
  fun getQueryObjectuiv = glGetQueryObjectuiv(id : UInt, pname : Enum, params : UInt*) : Void
  fun bindBuffer = glBindBuffer(target : Enum, buffer : UInt) : Void
  fun deleteBuffers = glDeleteBuffers(n : SizeI, buffers : UInt*) : Void
  fun genBuffers = glGenBuffers(n : SizeI, buffers : UInt*) : Void
  fun isBuffer = glIsBuffer(buffer : UInt) : Boolean
  fun bufferData = glBufferData(target : Enum, size : SizeIPtr, data : Void**, usage : Enum) : Void
  fun bufferSubData = glBufferSubData(target : Enum, offset : IntPtr, size : SizeIPtr, data : Void**) : Void
  fun getBufferSubData = glGetBufferSubData(target : Enum, offset : IntPtr, size : SizeIPtr, data : Void**) : Void
  fun mapBuffer = glMapBuffer(target : Enum, access : Enum) : Void**
  fun unmapBuffer = glUnmapBuffer(target : Enum) : Boolean
  fun getBufferParameteriv = glGetBufferParameteriv(target : Enum, pname : Enum, params : Int*) : Void
  fun getBufferPointerv = glGetBufferPointerv(target : Enum, pname : Enum, params : Void***) : Void
  fun blendEquationSeparate = glBlendEquationSeparate(modeRGB : Enum, modeAlpha : Enum) : Void
  fun drawBuffers = glDrawBuffers(n : SizeI, bufs : Enum*) : Void
  fun stencilOpSeparate = glStencilOpSeparate(face : Enum, sfail : Enum, dpfail : Enum, dppass : Enum) : Void
  fun stencilFuncSeparate = glStencilFuncSeparate(face : Enum, func : Enum, ref : Int, mask : UInt) : Void
  fun stencilMaskSeparate = glStencilMaskSeparate(face : Enum, mask : UInt) : Void
  fun attachShader = glAttachShader(program : UInt, shader : UInt) : Void
  fun bindAttribLocation = glBindAttribLocation(program : UInt, index : UInt, name : Char*) : Void
  fun compileShader = glCompileShader(shader : UInt) : Void
  fun createProgram = glCreateProgram() : UInt
  fun createShader = glCreateShader(type : Enum) : UInt
  fun deleteProgram = glDeleteProgram(program : UInt) : Void
  fun deleteShader = glDeleteShader(shader : UInt) : Void
  fun detachShader = glDetachShader(program : UInt, shader : UInt) : Void
  fun disableVertexAttribArray = glDisableVertexAttribArray(index : UInt) : Void
  fun enableVertexAttribArray = glEnableVertexAttribArray(index : UInt) : Void
  fun getActiveAttrib = glGetActiveAttrib(program : UInt, index : UInt, bufSize : SizeI, length : SizeI*, size : Int*, type : Enum*, name : Char*) : Void
  fun getActiveUniform = glGetActiveUniform(program : UInt, index : UInt, bufSize : SizeI, length : SizeI*, size : Int*, type : Enum*, name : Char*) : Void
  fun getAttachedShaders = glGetAttachedShaders(program : UInt, maxCount : SizeI, count : SizeI*, shaders : UInt*) : Void
  fun getAttribLocation = glGetAttribLocation(program : UInt, name : Char*) : Int
  fun getProgramiv = glGetProgramiv(program : UInt, pname : Enum, params : Int*) : Void
  fun getProgramInfoLog = glGetProgramInfoLog(program : UInt, bufSize : SizeI, length : SizeI*, infoLog : Char*) : Void
  fun getShaderiv = glGetShaderiv(shader : UInt, pname : Enum, params : Int*) : Void
  fun getShaderInfoLog = glGetShaderInfoLog(shader : UInt, bufSize : SizeI, length : SizeI*, infoLog : Char*) : Void
  fun getShaderSource = glGetShaderSource(shader : UInt, bufSize : SizeI, length : SizeI*, source : Char*) : Void
  fun getUniformLocation = glGetUniformLocation(program : UInt, name : Char*) : Int
  fun getUniformfv = glGetUniformfv(program : UInt, location : Int, params : Float*) : Void
  fun getUniformiv = glGetUniformiv(program : UInt, location : Int, params : Int*) : Void
  fun getVertexAttribdv = glGetVertexAttribdv(index : UInt, pname : Enum, params : Double*) : Void
  fun getVertexAttribfv = glGetVertexAttribfv(index : UInt, pname : Enum, params : Float*) : Void
  fun getVertexAttribiv = glGetVertexAttribiv(index : UInt, pname : Enum, params : Int*) : Void
  fun getVertexAttribPointerv = glGetVertexAttribPointerv(index : UInt, pname : Enum, pointer : Void***) : Void
  fun isProgram = glIsProgram(program : UInt) : Boolean
  fun isShader = glIsShader(shader : UInt) : Boolean
  fun linkProgram = glLinkProgram(program : UInt) : Void
  fun shaderSource = glShaderSource(shader : UInt, count : SizeI, string : Char*, length : Int*) : Void
  fun useProgram = glUseProgram(program : UInt) : Void
  fun uniform1f = glUniform1f(location : Int, v0 : Float) : Void
  fun uniform2f = glUniform2f(location : Int, v0 : Float, v1 : Float) : Void
  fun uniform3f = glUniform3f(location : Int, v0 : Float, v1 : Float, v2 : Float) : Void
  fun uniform4f = glUniform4f(location : Int, v0 : Float, v1 : Float, v2 : Float, v3 : Float) : Void
  fun uniform1i = glUniform1i(location : Int, v0 : Int) : Void
  fun uniform2i = glUniform2i(location : Int, v0 : Int, v1 : Int) : Void
  fun uniform3i = glUniform3i(location : Int, v0 : Int, v1 : Int, v2 : Int) : Void
  fun uniform4i = glUniform4i(location : Int, v0 : Int, v1 : Int, v2 : Int, v3 : Int) : Void
  fun uniform1fv = glUniform1fv(location : Int, count : SizeI, value : Float*) : Void
  fun uniform2fv = glUniform2fv(location : Int, count : SizeI, value : Float*) : Void
  fun uniform3fv = glUniform3fv(location : Int, count : SizeI, value : Float*) : Void
  fun uniform4fv = glUniform4fv(location : Int, count : SizeI, value : Float*) : Void
  fun uniform1iv = glUniform1iv(location : Int, count : SizeI, value : Int*) : Void
  fun uniform2iv = glUniform2iv(location : Int, count : SizeI, value : Int*) : Void
  fun uniform3iv = glUniform3iv(location : Int, count : SizeI, value : Int*) : Void
  fun uniform4iv = glUniform4iv(location : Int, count : SizeI, value : Int*) : Void
  fun uniformMatrix2fv = glUniformMatrix2fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix3fv = glUniformMatrix3fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix4fv = glUniformMatrix4fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun validateProgram = glValidateProgram(program : UInt) : Void
  fun vertexAttrib1d = glVertexAttrib1d(index : UInt, x : Double) : Void
  fun vertexAttrib1dv = glVertexAttrib1dv(index : UInt, v : Double*) : Void
  fun vertexAttrib1f = glVertexAttrib1f(index : UInt, x : Float) : Void
  fun vertexAttrib1fv = glVertexAttrib1fv(index : UInt, v : Float*) : Void
  fun vertexAttrib1s = glVertexAttrib1s(index : UInt, x : Short) : Void
  fun vertexAttrib1sv = glVertexAttrib1sv(index : UInt, v : Short*) : Void
  fun vertexAttrib2d = glVertexAttrib2d(index : UInt, x : Double, y : Double) : Void
  fun vertexAttrib2dv = glVertexAttrib2dv(index : UInt, v : Double*) : Void
  fun vertexAttrib2f = glVertexAttrib2f(index : UInt, x : Float, y : Float) : Void
  fun vertexAttrib2fv = glVertexAttrib2fv(index : UInt, v : Float*) : Void
  fun vertexAttrib2s = glVertexAttrib2s(index : UInt, x : Short, y : Short) : Void
  fun vertexAttrib2sv = glVertexAttrib2sv(index : UInt, v : Short*) : Void
  fun vertexAttrib3d = glVertexAttrib3d(index : UInt, x : Double, y : Double, z : Double) : Void
  fun vertexAttrib3dv = glVertexAttrib3dv(index : UInt, v : Double*) : Void
  fun vertexAttrib3f = glVertexAttrib3f(index : UInt, x : Float, y : Float, z : Float) : Void
  fun vertexAttrib3fv = glVertexAttrib3fv(index : UInt, v : Float*) : Void
  fun vertexAttrib3s = glVertexAttrib3s(index : UInt, x : Short, y : Short, z : Short) : Void
  fun vertexAttrib3sv = glVertexAttrib3sv(index : UInt, v : Short*) : Void
  fun vertexAttrib4Nbv = glVertexAttrib4Nbv(index : UInt, v : Byte*) : Void
  fun vertexAttrib4Niv = glVertexAttrib4Niv(index : UInt, v : Int*) : Void
  fun vertexAttrib4Nsv = glVertexAttrib4Nsv(index : UInt, v : Short*) : Void
  fun vertexAttrib4Nub = glVertexAttrib4Nub(index : UInt, x : UByte, y : UByte, z : UByte, w : UByte) : Void
  fun vertexAttrib4Nubv = glVertexAttrib4Nubv(index : UInt, v : UByte*) : Void
  fun vertexAttrib4Nuiv = glVertexAttrib4Nuiv(index : UInt, v : UInt*) : Void
  fun vertexAttrib4Nusv = glVertexAttrib4Nusv(index : UInt, v : UShort*) : Void
  fun vertexAttrib4bv = glVertexAttrib4bv(index : UInt, v : Byte*) : Void
  fun vertexAttrib4d = glVertexAttrib4d(index : UInt, x : Double, y : Double, z : Double, w : Double) : Void
  fun vertexAttrib4dv = glVertexAttrib4dv(index : UInt, v : Double*) : Void
  fun vertexAttrib4f = glVertexAttrib4f(index : UInt, x : Float, y : Float, z : Float, w : Float) : Void
  fun vertexAttrib4fv = glVertexAttrib4fv(index : UInt, v : Float*) : Void
  fun vertexAttrib4iv = glVertexAttrib4iv(index : UInt, v : Int*) : Void
  fun vertexAttrib4s = glVertexAttrib4s(index : UInt, x : Short, y : Short, z : Short, w : Short) : Void
  fun vertexAttrib4sv = glVertexAttrib4sv(index : UInt, v : Short*) : Void
  fun vertexAttrib4ubv = glVertexAttrib4ubv(index : UInt, v : UByte*) : Void
  fun vertexAttrib4uiv = glVertexAttrib4uiv(index : UInt, v : UInt*) : Void
  fun vertexAttrib4usv = glVertexAttrib4usv(index : UInt, v : UShort*) : Void
  fun vertexAttribPointer = glVertexAttribPointer(index : UInt, size : Int, type : Enum, normalized : Boolean, stride : SizeI, pointer : Void**) : Void
  fun uniformMatrix2x3fv = glUniformMatrix2x3fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix3x2fv = glUniformMatrix3x2fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix2x4fv = glUniformMatrix2x4fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix4x2fv = glUniformMatrix4x2fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix3x4fv = glUniformMatrix3x4fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun uniformMatrix4x3fv = glUniformMatrix4x3fv(location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun colorMaski = glColorMaski(index : UInt, r : Boolean, g : Boolean, b : Boolean, a : Boolean) : Void
  fun getBooleani_v = glGetBooleani_v(target : Enum, index : UInt, data : Boolean*) : Void
  fun getIntegeri_v = glGetIntegeri_v(target : Enum, index : UInt, data : Int*) : Void
  fun enablei = glEnablei(target : Enum, index : UInt) : Void
  fun disablei = glDisablei(target : Enum, index : UInt) : Void
  fun isEnabledi = glIsEnabledi(target : Enum, index : UInt) : Boolean
  fun beginTransformFeedback = glBeginTransformFeedback(primitiveMode : Enum) : Void
  fun endTransformFeedback = glEndTransformFeedback() : Void
  fun bindBufferRange = glBindBufferRange(target : Enum, index : UInt, buffer : UInt, offset : IntPtr, size : SizeIPtr) : Void
  fun bindBufferBase = glBindBufferBase(target : Enum, index : UInt, buffer : UInt) : Void
  fun transformFeedbackVaryings = glTransformFeedbackVaryings(program : UInt, count : SizeI, varyings : Char*, bufferMode : Enum) : Void
  fun getTransformFeedbackVarying = glGetTransformFeedbackVarying(program : UInt, index : UInt, bufSize : SizeI, length : SizeI*, size : SizeI*, type : Enum*, name : Char*) : Void
  fun clampColor = glClampColor(target : Enum, clamp : Enum) : Void
  fun beginConditionalRender = glBeginConditionalRender(id : UInt, mode : Enum) : Void
  fun endConditionalRender = glEndConditionalRender() : Void
  fun vertexAttribIPointer = glVertexAttribIPointer(index : UInt, size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun getVertexAttribIiv = glGetVertexAttribIiv(index : UInt, pname : Enum, params : Int*) : Void
  fun getVertexAttribIuiv = glGetVertexAttribIuiv(index : UInt, pname : Enum, params : UInt*) : Void
  fun vertexAttribI1i = glVertexAttribI1i(index : UInt, x : Int) : Void
  fun vertexAttribI2i = glVertexAttribI2i(index : UInt, x : Int, y : Int) : Void
  fun vertexAttribI3i = glVertexAttribI3i(index : UInt, x : Int, y : Int, z : Int) : Void
  fun vertexAttribI4i = glVertexAttribI4i(index : UInt, x : Int, y : Int, z : Int, w : Int) : Void
  fun vertexAttribI1ui = glVertexAttribI1ui(index : UInt, x : UInt) : Void
  fun vertexAttribI2ui = glVertexAttribI2ui(index : UInt, x : UInt, y : UInt) : Void
  fun vertexAttribI3ui = glVertexAttribI3ui(index : UInt, x : UInt, y : UInt, z : UInt) : Void
  fun vertexAttribI4ui = glVertexAttribI4ui(index : UInt, x : UInt, y : UInt, z : UInt, w : UInt) : Void
  fun vertexAttribI1iv = glVertexAttribI1iv(index : UInt, v : Int*) : Void
  fun vertexAttribI2iv = glVertexAttribI2iv(index : UInt, v : Int*) : Void
  fun vertexAttribI3iv = glVertexAttribI3iv(index : UInt, v : Int*) : Void
  fun vertexAttribI4iv = glVertexAttribI4iv(index : UInt, v : Int*) : Void
  fun vertexAttribI1uiv = glVertexAttribI1uiv(index : UInt, v : UInt*) : Void
  fun vertexAttribI2uiv = glVertexAttribI2uiv(index : UInt, v : UInt*) : Void
  fun vertexAttribI3uiv = glVertexAttribI3uiv(index : UInt, v : UInt*) : Void
  fun vertexAttribI4uiv = glVertexAttribI4uiv(index : UInt, v : UInt*) : Void
  fun vertexAttribI4bv = glVertexAttribI4bv(index : UInt, v : Byte*) : Void
  fun vertexAttribI4sv = glVertexAttribI4sv(index : UInt, v : Short*) : Void
  fun vertexAttribI4ubv = glVertexAttribI4ubv(index : UInt, v : UByte*) : Void
  fun vertexAttribI4usv = glVertexAttribI4usv(index : UInt, v : UShort*) : Void
  fun getUniformuiv = glGetUniformuiv(program : UInt, location : Int, params : UInt*) : Void
  fun bindFragDataLocation = glBindFragDataLocation(program : UInt, color : UInt, name : Char*) : Void
  fun getFragDataLocation = glGetFragDataLocation(program : UInt, name : Char*) : Int
  fun uniform1ui = glUniform1ui(location : Int, v0 : UInt) : Void
  fun uniform2ui = glUniform2ui(location : Int, v0 : UInt, v1 : UInt) : Void
  fun uniform3ui = glUniform3ui(location : Int, v0 : UInt, v1 : UInt, v2 : UInt) : Void
  fun uniform4ui = glUniform4ui(location : Int, v0 : UInt, v1 : UInt, v2 : UInt, v3 : UInt) : Void
  fun uniform1uiv = glUniform1uiv(location : Int, count : SizeI, value : UInt*) : Void
  fun uniform2uiv = glUniform2uiv(location : Int, count : SizeI, value : UInt*) : Void
  fun uniform3uiv = glUniform3uiv(location : Int, count : SizeI, value : UInt*) : Void
  fun uniform4uiv = glUniform4uiv(location : Int, count : SizeI, value : UInt*) : Void
  fun texParameterIiv = glTexParameterIiv(target : Enum, pname : Enum, params : Int*) : Void
  fun texParameterIuiv = glTexParameterIuiv(target : Enum, pname : Enum, params : UInt*) : Void
  fun getTexParameterIiv = glGetTexParameterIiv(target : Enum, pname : Enum, params : Int*) : Void
  fun getTexParameterIuiv = glGetTexParameterIuiv(target : Enum, pname : Enum, params : UInt*) : Void
  fun clearBufferiv = glClearBufferiv(buffer : Enum, drawbuffer : Int, value : Int*) : Void
  fun clearBufferuiv = glClearBufferuiv(buffer : Enum, drawbuffer : Int, value : UInt*) : Void
  fun clearBufferfv = glClearBufferfv(buffer : Enum, drawbuffer : Int, value : Float*) : Void
  fun clearBufferfi = glClearBufferfi(buffer : Enum, drawbuffer : Int, depth : Float, stencil : Int) : Void
  fun getStringi = glGetStringi(name : Enum, index : UInt) : UByte*
  fun isRenderbuffer = glIsRenderbuffer(renderbuffer : UInt) : Boolean
  fun bindRenderbuffer = glBindRenderbuffer(target : Enum, renderbuffer : UInt) : Void
  fun deleteRenderbuffers = glDeleteRenderbuffers(n : SizeI, renderbuffers : UInt*) : Void
  fun genRenderbuffers = glGenRenderbuffers(n : SizeI, renderbuffers : UInt*) : Void
  fun renderbufferStorage = glRenderbufferStorage(target : Enum, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun getRenderbufferParameteriv = glGetRenderbufferParameteriv(target : Enum, pname : Enum, params : Int*) : Void
  fun isFramebuffer = glIsFramebuffer(framebuffer : UInt) : Boolean
  fun bindFramebuffer = glBindFramebuffer(target : Enum, framebuffer : UInt) : Void
  fun deleteFramebuffers = glDeleteFramebuffers(n : SizeI, framebuffers : UInt*) : Void
  fun genFramebuffers = glGenFramebuffers(n : SizeI, framebuffers : UInt*) : Void
  fun checkFramebufferStatus = glCheckFramebufferStatus(target : Enum) : Enum
  fun framebufferTexture1D = glFramebufferTexture1D(target : Enum, attachment : Enum, textarget : Enum, texture : UInt, level : Int) : Void
  fun framebufferTexture2D = glFramebufferTexture2D(target : Enum, attachment : Enum, textarget : Enum, texture : UInt, level : Int) : Void
  fun framebufferTexture3D = glFramebufferTexture3D(target : Enum, attachment : Enum, textarget : Enum, texture : UInt, level : Int, zoffset : Int) : Void
  fun framebufferRenderbuffer = glFramebufferRenderbuffer(target : Enum, attachment : Enum, renderbuffertarget : Enum, renderbuffer : UInt) : Void
  fun getFramebufferAttachmentParameteriv = glGetFramebufferAttachmentParameteriv(target : Enum, attachment : Enum, pname : Enum, params : Int*) : Void
  fun generateMipmap = glGenerateMipmap(target : Enum) : Void
  fun blitFramebuffer = glBlitFramebuffer(srcX0 : Int, srcY0 : Int, srcX1 : Int, srcY1 : Int, dstX0 : Int, dstY0 : Int, dstX1 : Int, dstY1 : Int, mask : BitField, filter : Enum) : Void
  fun renderbufferStorageMultisample = glRenderbufferStorageMultisample(target : Enum, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun framebufferTextureLayer = glFramebufferTextureLayer(target : Enum, attachment : Enum, texture : UInt, level : Int, layer : Int) : Void
  fun mapBufferRange = glMapBufferRange(target : Enum, offset : IntPtr, length : SizeIPtr, access : BitField) : Void**
  fun flushMappedBufferRange = glFlushMappedBufferRange(target : Enum, offset : IntPtr, length : SizeIPtr) : Void
  fun bindVertexArray = glBindVertexArray(array : UInt) : Void
  fun deleteVertexArrays = glDeleteVertexArrays(n : SizeI, arrays : UInt*) : Void
  fun genVertexArrays = glGenVertexArrays(n : SizeI, arrays : UInt*) : Void
  fun isVertexArray = glIsVertexArray(array : UInt) : Boolean
  fun drawArraysInstanced = glDrawArraysInstanced(mode : Enum, first : Int, count : SizeI, instancecount : SizeI) : Void
  fun drawElementsInstanced = glDrawElementsInstanced(mode : Enum, count : SizeI, type : Enum, indices : Void**, instancecount : SizeI) : Void
  fun texBuffer = glTexBuffer(target : Enum, internalformat : Enum, buffer : UInt) : Void
  fun primitiveRestartIndex = glPrimitiveRestartIndex(index : UInt) : Void
  fun copyBufferSubData = glCopyBufferSubData(readTarget : Enum, writeTarget : Enum, readOffset : IntPtr, writeOffset : IntPtr, size : SizeIPtr) : Void
  fun getUniformIndices = glGetUniformIndices(program : UInt, uniformCount : SizeI, uniformNames : Char*, uniformIndices : UInt*) : Void
  fun getActiveUniformsiv = glGetActiveUniformsiv(program : UInt, uniformCount : SizeI, uniformIndices : UInt*, pname : Enum, params : Int*) : Void
  fun getActiveUniformName = glGetActiveUniformName(program : UInt, uniformIndex : UInt, bufSize : SizeI, length : SizeI*, uniformName : Char*) : Void
  fun getUniformBlockIndex = glGetUniformBlockIndex(program : UInt, uniformBlockName : Char*) : UInt
  fun getActiveUniformBlockiv = glGetActiveUniformBlockiv(program : UInt, uniformBlockIndex : UInt, pname : Enum, params : Int*) : Void
  fun getActiveUniformBlockName = glGetActiveUniformBlockName(program : UInt, uniformBlockIndex : UInt, bufSize : SizeI, length : SizeI*, uniformBlockName : Char*) : Void
  fun uniformBlockBinding = glUniformBlockBinding(program : UInt, uniformBlockIndex : UInt, uniformBlockBinding : UInt) : Void
  fun drawElementsBaseVertex = glDrawElementsBaseVertex(mode : Enum, count : SizeI, type : Enum, indices : Void**, basevertex : Int) : Void
  fun drawRangeElementsBaseVertex = glDrawRangeElementsBaseVertex(mode : Enum, start : UInt, end : UInt, count : SizeI, type : Enum, indices : Void**, basevertex : Int) : Void
  fun drawElementsInstancedBaseVertex = glDrawElementsInstancedBaseVertex(mode : Enum, count : SizeI, type : Enum, indices : Void**, instancecount : SizeI, basevertex : Int) : Void
  fun multiDrawElementsBaseVertex = glMultiDrawElementsBaseVertex(mode : Enum, count : SizeI*, type : Enum, indices : Void***, drawcount : SizeI, basevertex : Int*) : Void
  fun provokingVertex = glProvokingVertex(mode : Enum) : Void
  fun fenceSync = glFenceSync(condition : Enum, flags : BitField) : Sync
  fun isSync = glIsSync(sync : Sync) : Boolean
  fun deleteSync = glDeleteSync(sync : Sync) : Void
  fun clientWaitSync = glClientWaitSync(sync : Sync, flags : BitField, timeout : UInt64) : Enum
  fun waitSync = glWaitSync(sync : Sync, flags : BitField, timeout : UInt64) : Void
  fun getInteger64v = glGetInteger64v(pname : Enum, data : Int64*) : Void
  fun getSynciv = glGetSynciv(sync : Sync, pname : Enum, bufSize : SizeI, length : SizeI*, values : Int*) : Void
  fun getInteger64i_v = glGetInteger64i_v(target : Enum, index : UInt, data : Int64*) : Void
  fun getBufferParameteri64v = glGetBufferParameteri64v(target : Enum, pname : Enum, params : Int64*) : Void
  fun framebufferTexture = glFramebufferTexture(target : Enum, attachment : Enum, texture : UInt, level : Int) : Void
  fun texImage2DMultisample = glTexImage2DMultisample(target : Enum, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, fixedsamplelocations : Boolean) : Void
  fun texImage3DMultisample = glTexImage3DMultisample(target : Enum, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI, fixedsamplelocations : Boolean) : Void
  fun getMultisamplefv = glGetMultisamplefv(pname : Enum, index : UInt, val : Float*) : Void
  fun sampleMaski = glSampleMaski(maskNumber : UInt, mask : BitField) : Void
  fun bindFragDataLocationIndexed = glBindFragDataLocationIndexed(program : UInt, colorNumber : UInt, index : UInt, name : Char*) : Void
  fun getFragDataIndex = glGetFragDataIndex(program : UInt, name : Char*) : Int
  fun genSamplers = glGenSamplers(count : SizeI, samplers : UInt*) : Void
  fun deleteSamplers = glDeleteSamplers(count : SizeI, samplers : UInt*) : Void
  fun isSampler = glIsSampler(sampler : UInt) : Boolean
  fun bindSampler = glBindSampler(unit : UInt, sampler : UInt) : Void
  fun samplerParameteri = glSamplerParameteri(sampler : UInt, pname : Enum, param : Int) : Void
  fun samplerParameteriv = glSamplerParameteriv(sampler : UInt, pname : Enum, param : Int*) : Void
  fun samplerParameterf = glSamplerParameterf(sampler : UInt, pname : Enum, param : Float) : Void
  fun samplerParameterfv = glSamplerParameterfv(sampler : UInt, pname : Enum, param : Float*) : Void
  fun samplerParameterIiv = glSamplerParameterIiv(sampler : UInt, pname : Enum, param : Int*) : Void
  fun samplerParameterIuiv = glSamplerParameterIuiv(sampler : UInt, pname : Enum, param : UInt*) : Void
  fun getSamplerParameteriv = glGetSamplerParameteriv(sampler : UInt, pname : Enum, params : Int*) : Void
  fun getSamplerParameterIiv = glGetSamplerParameterIiv(sampler : UInt, pname : Enum, params : Int*) : Void
  fun getSamplerParameterfv = glGetSamplerParameterfv(sampler : UInt, pname : Enum, params : Float*) : Void
  fun getSamplerParameterIuiv = glGetSamplerParameterIuiv(sampler : UInt, pname : Enum, params : UInt*) : Void
  fun queryCounter = glQueryCounter(id : UInt, target : Enum) : Void
  fun getQueryObjecti64v = glGetQueryObjecti64v(id : UInt, pname : Enum, params : Int64*) : Void
  fun getQueryObjectui64v = glGetQueryObjectui64v(id : UInt, pname : Enum, params : UInt64*) : Void
  fun vertexAttribDivisor = glVertexAttribDivisor(index : UInt, divisor : UInt) : Void
  fun vertexAttribP1ui = glVertexAttribP1ui(index : UInt, type : Enum, normalized : Boolean, value : UInt) : Void
  fun vertexAttribP1uiv = glVertexAttribP1uiv(index : UInt, type : Enum, normalized : Boolean, value : UInt*) : Void
  fun vertexAttribP2ui = glVertexAttribP2ui(index : UInt, type : Enum, normalized : Boolean, value : UInt) : Void
  fun vertexAttribP2uiv = glVertexAttribP2uiv(index : UInt, type : Enum, normalized : Boolean, value : UInt*) : Void
  fun vertexAttribP3ui = glVertexAttribP3ui(index : UInt, type : Enum, normalized : Boolean, value : UInt) : Void
  fun vertexAttribP3uiv = glVertexAttribP3uiv(index : UInt, type : Enum, normalized : Boolean, value : UInt*) : Void
  fun vertexAttribP4ui = glVertexAttribP4ui(index : UInt, type : Enum, normalized : Boolean, value : UInt) : Void
  fun vertexAttribP4uiv = glVertexAttribP4uiv(index : UInt, type : Enum, normalized : Boolean, value : UInt*) : Void
  fun vertexP2ui = glVertexP2ui(type : Enum, value : UInt) : Void
  fun vertexP2uiv = glVertexP2uiv(type : Enum, value : UInt*) : Void
  fun vertexP3ui = glVertexP3ui(type : Enum, value : UInt) : Void
  fun vertexP3uiv = glVertexP3uiv(type : Enum, value : UInt*) : Void
  fun vertexP4ui = glVertexP4ui(type : Enum, value : UInt) : Void
  fun vertexP4uiv = glVertexP4uiv(type : Enum, value : UInt*) : Void
  fun texCoordP1ui = glTexCoordP1ui(type : Enum, coords : UInt) : Void
  fun texCoordP1uiv = glTexCoordP1uiv(type : Enum, coords : UInt*) : Void
  fun texCoordP2ui = glTexCoordP2ui(type : Enum, coords : UInt) : Void
  fun texCoordP2uiv = glTexCoordP2uiv(type : Enum, coords : UInt*) : Void
  fun texCoordP3ui = glTexCoordP3ui(type : Enum, coords : UInt) : Void
  fun texCoordP3uiv = glTexCoordP3uiv(type : Enum, coords : UInt*) : Void
  fun texCoordP4ui = glTexCoordP4ui(type : Enum, coords : UInt) : Void
  fun texCoordP4uiv = glTexCoordP4uiv(type : Enum, coords : UInt*) : Void
  fun multiTexCoordP1ui = glMultiTexCoordP1ui(texture : Enum, type : Enum, coords : UInt) : Void
  fun multiTexCoordP1uiv = glMultiTexCoordP1uiv(texture : Enum, type : Enum, coords : UInt*) : Void
  fun multiTexCoordP2ui = glMultiTexCoordP2ui(texture : Enum, type : Enum, coords : UInt) : Void
  fun multiTexCoordP2uiv = glMultiTexCoordP2uiv(texture : Enum, type : Enum, coords : UInt*) : Void
  fun multiTexCoordP3ui = glMultiTexCoordP3ui(texture : Enum, type : Enum, coords : UInt) : Void
  fun multiTexCoordP3uiv = glMultiTexCoordP3uiv(texture : Enum, type : Enum, coords : UInt*) : Void
  fun multiTexCoordP4ui = glMultiTexCoordP4ui(texture : Enum, type : Enum, coords : UInt) : Void
  fun multiTexCoordP4uiv = glMultiTexCoordP4uiv(texture : Enum, type : Enum, coords : UInt*) : Void
  fun normalP3ui = glNormalP3ui(type : Enum, coords : UInt) : Void
  fun normalP3uiv = glNormalP3uiv(type : Enum, coords : UInt*) : Void
  fun colorP3ui = glColorP3ui(type : Enum, color : UInt) : Void
  fun colorP3uiv = glColorP3uiv(type : Enum, color : UInt*) : Void
  fun colorP4ui = glColorP4ui(type : Enum, color : UInt) : Void
  fun colorP4uiv = glColorP4uiv(type : Enum, color : UInt*) : Void
  fun secondaryColorP3ui = glSecondaryColorP3ui(type : Enum, color : UInt) : Void
  fun secondaryColorP3uiv = glSecondaryColorP3uiv(type : Enum, color : UInt*) : Void
  fun minSampleShading = glMinSampleShading(value : Float) : Void
  fun blendEquationi = glBlendEquationi(buf : UInt, mode : Enum) : Void
  fun blendEquationSeparatei = glBlendEquationSeparatei(buf : UInt, modeRGB : Enum, modeAlpha : Enum) : Void
  fun blendFunci = glBlendFunci(buf : UInt, src : Enum, dst : Enum) : Void
  fun blendFuncSeparatei = glBlendFuncSeparatei(buf : UInt, srcRGB : Enum, dstRGB : Enum, srcAlpha : Enum, dstAlpha : Enum) : Void
  fun drawArraysIndirect = glDrawArraysIndirect(mode : Enum, indirect : Void**) : Void
  fun drawElementsIndirect = glDrawElementsIndirect(mode : Enum, type : Enum, indirect : Void**) : Void
  fun uniform1d = glUniform1d(location : Int, x : Double) : Void
  fun uniform2d = glUniform2d(location : Int, x : Double, y : Double) : Void
  fun uniform3d = glUniform3d(location : Int, x : Double, y : Double, z : Double) : Void
  fun uniform4d = glUniform4d(location : Int, x : Double, y : Double, z : Double, w : Double) : Void
  fun uniform1dv = glUniform1dv(location : Int, count : SizeI, value : Double*) : Void
  fun uniform2dv = glUniform2dv(location : Int, count : SizeI, value : Double*) : Void
  fun uniform3dv = glUniform3dv(location : Int, count : SizeI, value : Double*) : Void
  fun uniform4dv = glUniform4dv(location : Int, count : SizeI, value : Double*) : Void
  fun uniformMatrix2dv = glUniformMatrix2dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix3dv = glUniformMatrix3dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix4dv = glUniformMatrix4dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix2x3dv = glUniformMatrix2x3dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix2x4dv = glUniformMatrix2x4dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix3x2dv = glUniformMatrix3x2dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix3x4dv = glUniformMatrix3x4dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix4x2dv = glUniformMatrix4x2dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun uniformMatrix4x3dv = glUniformMatrix4x3dv(location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun getUniformdv = glGetUniformdv(program : UInt, location : Int, params : Double*) : Void
  fun getSubroutineUniformLocation = glGetSubroutineUniformLocation(program : UInt, shadertype : Enum, name : Char*) : Int
  fun getSubroutineIndex = glGetSubroutineIndex(program : UInt, shadertype : Enum, name : Char*) : UInt
  fun getActiveSubroutineUniformiv = glGetActiveSubroutineUniformiv(program : UInt, shadertype : Enum, index : UInt, pname : Enum, values : Int*) : Void
  fun getActiveSubroutineUniformName = glGetActiveSubroutineUniformName(program : UInt, shadertype : Enum, index : UInt, bufsize : SizeI, length : SizeI*, name : Char*) : Void
  fun getActiveSubroutineName = glGetActiveSubroutineName(program : UInt, shadertype : Enum, index : UInt, bufsize : SizeI, length : SizeI*, name : Char*) : Void
  fun uniformSubroutinesuiv = glUniformSubroutinesuiv(shadertype : Enum, count : SizeI, indices : UInt*) : Void
  fun getUniformSubroutineuiv = glGetUniformSubroutineuiv(shadertype : Enum, location : Int, params : UInt*) : Void
  fun getProgramStageiv = glGetProgramStageiv(program : UInt, shadertype : Enum, pname : Enum, values : Int*) : Void
  fun patchParameteri = glPatchParameteri(pname : Enum, value : Int) : Void
  fun patchParameterfv = glPatchParameterfv(pname : Enum, values : Float*) : Void
  fun bindTransformFeedback = glBindTransformFeedback(target : Enum, id : UInt) : Void
  fun deleteTransformFeedbacks = glDeleteTransformFeedbacks(n : SizeI, ids : UInt*) : Void
  fun genTransformFeedbacks = glGenTransformFeedbacks(n : SizeI, ids : UInt*) : Void
  fun isTransformFeedback = glIsTransformFeedback(id : UInt) : Boolean
  fun pauseTransformFeedback = glPauseTransformFeedback() : Void
  fun resumeTransformFeedback = glResumeTransformFeedback() : Void
  fun drawTransformFeedback = glDrawTransformFeedback(mode : Enum, id : UInt) : Void
  fun drawTransformFeedbackStream = glDrawTransformFeedbackStream(mode : Enum, id : UInt, stream : UInt) : Void
  fun beginQueryIndexed = glBeginQueryIndexed(target : Enum, index : UInt, id : UInt) : Void
  fun endQueryIndexed = glEndQueryIndexed(target : Enum, index : UInt) : Void
  fun getQueryIndexediv = glGetQueryIndexediv(target : Enum, index : UInt, pname : Enum, params : Int*) : Void
  fun releaseShaderCompiler = glReleaseShaderCompiler() : Void
  fun shaderBinary = glShaderBinary(count : SizeI, shaders : UInt*, binaryformat : Enum, binary : Void**, length : SizeI) : Void
  fun getShaderPrecisionFormat = glGetShaderPrecisionFormat(shadertype : Enum, precisiontype : Enum, range : Int*, precision : Int*) : Void
  fun depthRangef = glDepthRangef(n : Float, f : Float) : Void
  fun clearDepthf = glClearDepthf(d : Float) : Void
  fun getProgramBinary = glGetProgramBinary(program : UInt, bufSize : SizeI, length : SizeI*, binaryFormat : Enum*, binary : Void**) : Void
  fun programBinary = glProgramBinary(program : UInt, binaryFormat : Enum, binary : Void**, length : SizeI) : Void
  fun programParameteri = glProgramParameteri(program : UInt, pname : Enum, value : Int) : Void
  fun useProgramStages = glUseProgramStages(pipeline : UInt, stages : BitField, program : UInt) : Void
  fun activeShaderProgram = glActiveShaderProgram(pipeline : UInt, program : UInt) : Void
  fun createShaderProgramv = glCreateShaderProgramv(type : Enum, count : SizeI, strings : Char*) : UInt
  fun bindProgramPipeline = glBindProgramPipeline(pipeline : UInt) : Void
  fun deleteProgramPipelines = glDeleteProgramPipelines(n : SizeI, pipelines : UInt*) : Void
  fun genProgramPipelines = glGenProgramPipelines(n : SizeI, pipelines : UInt*) : Void
  fun isProgramPipeline = glIsProgramPipeline(pipeline : UInt) : Boolean
  fun getProgramPipelineiv = glGetProgramPipelineiv(pipeline : UInt, pname : Enum, params : Int*) : Void
  fun programUniform1i = glProgramUniform1i(program : UInt, location : Int, v0 : Int) : Void
  fun programUniform1iv = glProgramUniform1iv(program : UInt, location : Int, count : SizeI, value : Int*) : Void
  fun programUniform1f = glProgramUniform1f(program : UInt, location : Int, v0 : Float) : Void
  fun programUniform1fv = glProgramUniform1fv(program : UInt, location : Int, count : SizeI, value : Float*) : Void
  fun programUniform1d = glProgramUniform1d(program : UInt, location : Int, v0 : Double) : Void
  fun programUniform1dv = glProgramUniform1dv(program : UInt, location : Int, count : SizeI, value : Double*) : Void
  fun programUniform1ui = glProgramUniform1ui(program : UInt, location : Int, v0 : UInt) : Void
  fun programUniform1uiv = glProgramUniform1uiv(program : UInt, location : Int, count : SizeI, value : UInt*) : Void
  fun programUniform2i = glProgramUniform2i(program : UInt, location : Int, v0 : Int, v1 : Int) : Void
  fun programUniform2iv = glProgramUniform2iv(program : UInt, location : Int, count : SizeI, value : Int*) : Void
  fun programUniform2f = glProgramUniform2f(program : UInt, location : Int, v0 : Float, v1 : Float) : Void
  fun programUniform2fv = glProgramUniform2fv(program : UInt, location : Int, count : SizeI, value : Float*) : Void
  fun programUniform2d = glProgramUniform2d(program : UInt, location : Int, v0 : Double, v1 : Double) : Void
  fun programUniform2dv = glProgramUniform2dv(program : UInt, location : Int, count : SizeI, value : Double*) : Void
  fun programUniform2ui = glProgramUniform2ui(program : UInt, location : Int, v0 : UInt, v1 : UInt) : Void
  fun programUniform2uiv = glProgramUniform2uiv(program : UInt, location : Int, count : SizeI, value : UInt*) : Void
  fun programUniform3i = glProgramUniform3i(program : UInt, location : Int, v0 : Int, v1 : Int, v2 : Int) : Void
  fun programUniform3iv = glProgramUniform3iv(program : UInt, location : Int, count : SizeI, value : Int*) : Void
  fun programUniform3f = glProgramUniform3f(program : UInt, location : Int, v0 : Float, v1 : Float, v2 : Float) : Void
  fun programUniform3fv = glProgramUniform3fv(program : UInt, location : Int, count : SizeI, value : Float*) : Void
  fun programUniform3d = glProgramUniform3d(program : UInt, location : Int, v0 : Double, v1 : Double, v2 : Double) : Void
  fun programUniform3dv = glProgramUniform3dv(program : UInt, location : Int, count : SizeI, value : Double*) : Void
  fun programUniform3ui = glProgramUniform3ui(program : UInt, location : Int, v0 : UInt, v1 : UInt, v2 : UInt) : Void
  fun programUniform3uiv = glProgramUniform3uiv(program : UInt, location : Int, count : SizeI, value : UInt*) : Void
  fun programUniform4i = glProgramUniform4i(program : UInt, location : Int, v0 : Int, v1 : Int, v2 : Int, v3 : Int) : Void
  fun programUniform4iv = glProgramUniform4iv(program : UInt, location : Int, count : SizeI, value : Int*) : Void
  fun programUniform4f = glProgramUniform4f(program : UInt, location : Int, v0 : Float, v1 : Float, v2 : Float, v3 : Float) : Void
  fun programUniform4fv = glProgramUniform4fv(program : UInt, location : Int, count : SizeI, value : Float*) : Void
  fun programUniform4d = glProgramUniform4d(program : UInt, location : Int, v0 : Double, v1 : Double, v2 : Double, v3 : Double) : Void
  fun programUniform4dv = glProgramUniform4dv(program : UInt, location : Int, count : SizeI, value : Double*) : Void
  fun programUniform4ui = glProgramUniform4ui(program : UInt, location : Int, v0 : UInt, v1 : UInt, v2 : UInt, v3 : UInt) : Void
  fun programUniform4uiv = glProgramUniform4uiv(program : UInt, location : Int, count : SizeI, value : UInt*) : Void
  fun programUniformMatrix2fv = glProgramUniformMatrix2fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix3fv = glProgramUniformMatrix3fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix4fv = glProgramUniformMatrix4fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix2dv = glProgramUniformMatrix2dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix3dv = glProgramUniformMatrix3dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix4dv = glProgramUniformMatrix4dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix2x3fv = glProgramUniformMatrix2x3fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix3x2fv = glProgramUniformMatrix3x2fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix2x4fv = glProgramUniformMatrix2x4fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix4x2fv = glProgramUniformMatrix4x2fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix3x4fv = glProgramUniformMatrix3x4fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix4x3fv = glProgramUniformMatrix4x3fv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Float*) : Void
  fun programUniformMatrix2x3dv = glProgramUniformMatrix2x3dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix3x2dv = glProgramUniformMatrix3x2dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix2x4dv = glProgramUniformMatrix2x4dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix4x2dv = glProgramUniformMatrix4x2dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix3x4dv = glProgramUniformMatrix3x4dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun programUniformMatrix4x3dv = glProgramUniformMatrix4x3dv(program : UInt, location : Int, count : SizeI, transpose : Boolean, value : Double*) : Void
  fun validateProgramPipeline = glValidateProgramPipeline(pipeline : UInt) : Void
  fun getProgramPipelineInfoLog = glGetProgramPipelineInfoLog(pipeline : UInt, bufSize : SizeI, length : SizeI*, infoLog : Char*) : Void
  fun vertexAttribL1d = glVertexAttribL1d(index : UInt, x : Double) : Void
  fun vertexAttribL2d = glVertexAttribL2d(index : UInt, x : Double, y : Double) : Void
  fun vertexAttribL3d = glVertexAttribL3d(index : UInt, x : Double, y : Double, z : Double) : Void
  fun vertexAttribL4d = glVertexAttribL4d(index : UInt, x : Double, y : Double, z : Double, w : Double) : Void
  fun vertexAttribL1dv = glVertexAttribL1dv(index : UInt, v : Double*) : Void
  fun vertexAttribL2dv = glVertexAttribL2dv(index : UInt, v : Double*) : Void
  fun vertexAttribL3dv = glVertexAttribL3dv(index : UInt, v : Double*) : Void
  fun vertexAttribL4dv = glVertexAttribL4dv(index : UInt, v : Double*) : Void
  fun vertexAttribLPointer = glVertexAttribLPointer(index : UInt, size : Int, type : Enum, stride : SizeI, pointer : Void**) : Void
  fun getVertexAttribLdv = glGetVertexAttribLdv(index : UInt, pname : Enum, params : Double*) : Void
  fun viewportArrayv = glViewportArrayv(first : UInt, count : SizeI, v : Float*) : Void
  fun viewportIndexedf = glViewportIndexedf(index : UInt, x : Float, y : Float, w : Float, h : Float) : Void
  fun viewportIndexedfv = glViewportIndexedfv(index : UInt, v : Float*) : Void
  fun scissorArrayv = glScissorArrayv(first : UInt, count : SizeI, v : Int*) : Void
  fun scissorIndexed = glScissorIndexed(index : UInt, left : Int, bottom : Int, width : SizeI, height : SizeI) : Void
  fun scissorIndexedv = glScissorIndexedv(index : UInt, v : Int*) : Void
  fun depthRangeArrayv = glDepthRangeArrayv(first : UInt, count : SizeI, v : Double*) : Void
  fun depthRangeIndexed = glDepthRangeIndexed(index : UInt, n : Double, f : Double) : Void
  fun getFloati_v = glGetFloati_v(target : Enum, index : UInt, data : Float*) : Void
  fun getDoublei_v = glGetDoublei_v(target : Enum, index : UInt, data : Double*) : Void
  fun drawArraysInstancedBaseInstance = glDrawArraysInstancedBaseInstance(mode : Enum, first : Int, count : SizeI, instancecount : SizeI, baseinstance : UInt) : Void
  fun drawElementsInstancedBaseInstance = glDrawElementsInstancedBaseInstance(mode : Enum, count : SizeI, type : Enum, indices : Void**, instancecount : SizeI, baseinstance : UInt) : Void
  fun drawElementsInstancedBaseVertexBaseInstance = glDrawElementsInstancedBaseVertexBaseInstance(mode : Enum, count : SizeI, type : Enum, indices : Void**, instancecount : SizeI, basevertex : Int, baseinstance : UInt) : Void
  fun getInternalformativ = glGetInternalformativ(target : Enum, internalformat : Enum, pname : Enum, bufSize : SizeI, params : Int*) : Void
  fun getActiveAtomicCounterBufferiv = glGetActiveAtomicCounterBufferiv(program : UInt, bufferIndex : UInt, pname : Enum, params : Int*) : Void
  fun bindImageTexture = glBindImageTexture(unit : UInt, texture : UInt, level : Int, layered : Boolean, layer : Int, access : Enum, format : Enum) : Void
  fun memoryBarrier = glMemoryBarrier(barriers : BitField) : Void
  fun texStorage1D = glTexStorage1D(target : Enum, levels : SizeI, internalformat : Enum, width : SizeI) : Void
  fun texStorage2D = glTexStorage2D(target : Enum, levels : SizeI, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun texStorage3D = glTexStorage3D(target : Enum, levels : SizeI, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI) : Void
  fun drawTransformFeedbackInstanced = glDrawTransformFeedbackInstanced(mode : Enum, id : UInt, instancecount : SizeI) : Void
  fun drawTransformFeedbackStreamInstanced = glDrawTransformFeedbackStreamInstanced(mode : Enum, id : UInt, stream : UInt, instancecount : SizeI) : Void
  fun clearBufferData = glClearBufferData(target : Enum, internalformat : Enum, format : Enum, type : Enum, data : Void**) : Void
  fun clearBufferSubData = glClearBufferSubData(target : Enum, internalformat : Enum, offset : IntPtr, size : SizeIPtr, format : Enum, type : Enum, data : Void**) : Void
  fun dispatchCompute = glDispatchCompute(num_groups_x : UInt, num_groups_y : UInt, num_groups_z : UInt) : Void
  fun dispatchComputeIndirect = glDispatchComputeIndirect(indirect : IntPtr) : Void
  fun copyImageSubData = glCopyImageSubData(srcName : UInt, srcTarget : Enum, srcLevel : Int, srcX : Int, srcY : Int, srcZ : Int, dstName : UInt, dstTarget : Enum, dstLevel : Int, dstX : Int, dstY : Int, dstZ : Int, srcWidth : SizeI, srcHeight : SizeI, srcDepth : SizeI) : Void
  fun framebufferParameteri = glFramebufferParameteri(target : Enum, pname : Enum, param : Int) : Void
  fun getFramebufferParameteriv = glGetFramebufferParameteriv(target : Enum, pname : Enum, params : Int*) : Void
  fun getInternalformati64v = glGetInternalformati64v(target : Enum, internalformat : Enum, pname : Enum, bufSize : SizeI, params : Int64*) : Void
  fun invalidateTexSubImage = glInvalidateTexSubImage(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI) : Void
  fun invalidateTexImage = glInvalidateTexImage(texture : UInt, level : Int) : Void
  fun invalidateBufferSubData = glInvalidateBufferSubData(buffer : UInt, offset : IntPtr, length : SizeIPtr) : Void
  fun invalidateBufferData = glInvalidateBufferData(buffer : UInt) : Void
  fun invalidateFramebuffer = glInvalidateFramebuffer(target : Enum, numAttachments : SizeI, attachments : Enum*) : Void
  fun invalidateSubFramebuffer = glInvalidateSubFramebuffer(target : Enum, numAttachments : SizeI, attachments : Enum*, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun multiDrawArraysIndirect = glMultiDrawArraysIndirect(mode : Enum, indirect : Void**, drawcount : SizeI, stride : SizeI) : Void
  fun multiDrawElementsIndirect = glMultiDrawElementsIndirect(mode : Enum, type : Enum, indirect : Void**, drawcount : SizeI, stride : SizeI) : Void
  fun getProgramInterfaceiv = glGetProgramInterfaceiv(program : UInt, programInterface : Enum, pname : Enum, params : Int*) : Void
  fun getProgramResourceIndex = glGetProgramResourceIndex(program : UInt, programInterface : Enum, name : Char*) : UInt
  fun getProgramResourceName = glGetProgramResourceName(program : UInt, programInterface : Enum, index : UInt, bufSize : SizeI, length : SizeI*, name : Char*) : Void
  fun getProgramResourceiv = glGetProgramResourceiv(program : UInt, programInterface : Enum, index : UInt, propCount : SizeI, props : Enum*, bufSize : SizeI, length : SizeI*, params : Int*) : Void
  fun getProgramResourceLocation = glGetProgramResourceLocation(program : UInt, programInterface : Enum, name : Char*) : Int
  fun getProgramResourceLocationIndex = glGetProgramResourceLocationIndex(program : UInt, programInterface : Enum, name : Char*) : Int
  fun shaderStorageBlockBinding = glShaderStorageBlockBinding(program : UInt, storageBlockIndex : UInt, storageBlockBinding : UInt) : Void
  fun texBufferRange = glTexBufferRange(target : Enum, internalformat : Enum, buffer : UInt, offset : IntPtr, size : SizeIPtr) : Void
  fun texStorage2DMultisample = glTexStorage2DMultisample(target : Enum, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, fixedsamplelocations : Boolean) : Void
  fun texStorage3DMultisample = glTexStorage3DMultisample(target : Enum, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI, fixedsamplelocations : Boolean) : Void
  fun textureView = glTextureView(texture : UInt, target : Enum, origtexture : UInt, internalformat : Enum, minlevel : UInt, numlevels : UInt, minlayer : UInt, numlayers : UInt) : Void
  fun bindVertexBuffer = glBindVertexBuffer(bindingindex : UInt, buffer : UInt, offset : IntPtr, stride : SizeI) : Void
  fun vertexAttribFormat = glVertexAttribFormat(attribindex : UInt, size : Int, type : Enum, normalized : Boolean, relativeoffset : UInt) : Void
  fun vertexAttribIFormat = glVertexAttribIFormat(attribindex : UInt, size : Int, type : Enum, relativeoffset : UInt) : Void
  fun vertexAttribLFormat = glVertexAttribLFormat(attribindex : UInt, size : Int, type : Enum, relativeoffset : UInt) : Void
  fun vertexAttribBinding = glVertexAttribBinding(attribindex : UInt, bindingindex : UInt) : Void
  fun vertexBindingDivisor = glVertexBindingDivisor(bindingindex : UInt, divisor : UInt) : Void
  fun debugMessageControl = glDebugMessageControl(source : Enum, type : Enum, severity : Enum, count : SizeI, ids : UInt*, enabled : Boolean) : Void
  fun debugMessageInsert = glDebugMessageInsert(source : Enum, type : Enum, id : UInt, severity : Enum, length : SizeI, buf : Char*) : Void
  fun debugMessageCallback = glDebugMessageCallback(callback : DebugProc, userParam : Void**) : Void
  fun getDebugMessageLog = glGetDebugMessageLog(count : UInt, bufSize : SizeI, sources : Enum*, types : Enum*, ids : UInt*, severities : Enum*, lengths : SizeI*, messageLog : Char*) : UInt
  fun pushDebugGroup = glPushDebugGroup(source : Enum, id : UInt, length : SizeI, message : Char*) : Void
  fun popDebugGroup = glPopDebugGroup() : Void
  fun objectLabel = glObjectLabel(identifier : Enum, name : UInt, length : SizeI, label : Char*) : Void
  fun getObjectLabel = glGetObjectLabel(identifier : Enum, name : UInt, bufSize : SizeI, length : SizeI*, label : Char*) : Void
  fun objectPtrLabel = glObjectPtrLabel(ptr : Void**, length : SizeI, label : Char*) : Void
  fun getObjectPtrLabel = glGetObjectPtrLabel(ptr : Void**, bufSize : SizeI, length : SizeI*, label : Char*) : Void
  fun bufferStorage = glBufferStorage(target : Enum, size : SizeIPtr, data : Void**, flags : BitField) : Void
  fun clearTexImage = glClearTexImage(texture : UInt, level : Int, format : Enum, type : Enum, data : Void**) : Void
  fun clearTexSubImage = glClearTexSubImage(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, type : Enum, data : Void**) : Void
  fun bindBuffersBase = glBindBuffersBase(target : Enum, first : UInt, count : SizeI, buffers : UInt*) : Void
  fun bindBuffersRange = glBindBuffersRange(target : Enum, first : UInt, count : SizeI, buffers : UInt*, offsets : IntPtr*, sizes : SizeIPtr*) : Void
  fun bindTextures = glBindTextures(first : UInt, count : SizeI, textures : UInt*) : Void
  fun bindSamplers = glBindSamplers(first : UInt, count : SizeI, samplers : UInt*) : Void
  fun bindImageTextures = glBindImageTextures(first : UInt, count : SizeI, textures : UInt*) : Void
  fun bindVertexBuffers = glBindVertexBuffers(first : UInt, count : SizeI, buffers : UInt*, offsets : IntPtr*, strides : SizeI*) : Void
  fun clipControl = glClipControl(origin : Enum, depth : Enum) : Void
  fun createTransformFeedbacks = glCreateTransformFeedbacks(n : SizeI, ids : UInt*) : Void
  fun transformFeedbackBufferBase = glTransformFeedbackBufferBase(xfb : UInt, index : UInt, buffer : UInt) : Void
  fun transformFeedbackBufferRange = glTransformFeedbackBufferRange(xfb : UInt, index : UInt, buffer : UInt, offset : IntPtr, size : SizeIPtr) : Void
  fun getTransformFeedbackiv = glGetTransformFeedbackiv(xfb : UInt, pname : Enum, param : Int*) : Void
  fun getTransformFeedbacki_v = glGetTransformFeedbacki_v(xfb : UInt, pname : Enum, index : UInt, param : Int*) : Void
  fun getTransformFeedbacki64_v = glGetTransformFeedbacki64_v(xfb : UInt, pname : Enum, index : UInt, param : Int64*) : Void
  fun createBuffers = glCreateBuffers(n : SizeI, buffers : UInt*) : Void
  fun namedBufferStorage = glNamedBufferStorage(buffer : UInt, size : SizeIPtr, data : Void**, flags : BitField) : Void
  fun namedBufferData = glNamedBufferData(buffer : UInt, size : SizeIPtr, data : Void**, usage : Enum) : Void
  fun namedBufferSubData = glNamedBufferSubData(buffer : UInt, offset : IntPtr, size : SizeIPtr, data : Void**) : Void
  fun copyNamedBufferSubData = glCopyNamedBufferSubData(readBuffer : UInt, writeBuffer : UInt, readOffset : IntPtr, writeOffset : IntPtr, size : SizeIPtr) : Void
  fun clearNamedBufferData = glClearNamedBufferData(buffer : UInt, internalformat : Enum, format : Enum, type : Enum, data : Void**) : Void
  fun clearNamedBufferSubData = glClearNamedBufferSubData(buffer : UInt, internalformat : Enum, offset : IntPtr, size : SizeIPtr, format : Enum, type : Enum, data : Void**) : Void
  fun mapNamedBuffer = glMapNamedBuffer(buffer : UInt, access : Enum) : Void**
  fun mapNamedBufferRange = glMapNamedBufferRange(buffer : UInt, offset : IntPtr, length : SizeIPtr, access : BitField) : Void**
  fun unmapNamedBuffer = glUnmapNamedBuffer(buffer : UInt) : Boolean
  fun flushMappedNamedBufferRange = glFlushMappedNamedBufferRange(buffer : UInt, offset : IntPtr, length : SizeIPtr) : Void
  fun getNamedBufferParameteriv = glGetNamedBufferParameteriv(buffer : UInt, pname : Enum, params : Int*) : Void
  fun getNamedBufferParameteri64v = glGetNamedBufferParameteri64v(buffer : UInt, pname : Enum, params : Int64*) : Void
  fun getNamedBufferPointerv = glGetNamedBufferPointerv(buffer : UInt, pname : Enum, params : Void***) : Void
  fun getNamedBufferSubData = glGetNamedBufferSubData(buffer : UInt, offset : IntPtr, size : SizeIPtr, data : Void**) : Void
  fun createFramebuffers = glCreateFramebuffers(n : SizeI, framebuffers : UInt*) : Void
  fun namedFramebufferRenderbuffer = glNamedFramebufferRenderbuffer(framebuffer : UInt, attachment : Enum, renderbuffertarget : Enum, renderbuffer : UInt) : Void
  fun namedFramebufferParameteri = glNamedFramebufferParameteri(framebuffer : UInt, pname : Enum, param : Int) : Void
  fun namedFramebufferTexture = glNamedFramebufferTexture(framebuffer : UInt, attachment : Enum, texture : UInt, level : Int) : Void
  fun namedFramebufferTextureLayer = glNamedFramebufferTextureLayer(framebuffer : UInt, attachment : Enum, texture : UInt, level : Int, layer : Int) : Void
  fun namedFramebufferDrawBuffer = glNamedFramebufferDrawBuffer(framebuffer : UInt, buf : Enum) : Void
  fun namedFramebufferDrawBuffers = glNamedFramebufferDrawBuffers(framebuffer : UInt, n : SizeI, bufs : Enum*) : Void
  fun namedFramebufferReadBuffer = glNamedFramebufferReadBuffer(framebuffer : UInt, src : Enum) : Void
  fun invalidateNamedFramebufferData = glInvalidateNamedFramebufferData(framebuffer : UInt, numAttachments : SizeI, attachments : Enum*) : Void
  fun invalidateNamedFramebufferSubData = glInvalidateNamedFramebufferSubData(framebuffer : UInt, numAttachments : SizeI, attachments : Enum*, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun clearNamedFramebufferiv = glClearNamedFramebufferiv(framebuffer : UInt, buffer : Enum, drawbuffer : Int, value : Int*) : Void
  fun clearNamedFramebufferuiv = glClearNamedFramebufferuiv(framebuffer : UInt, buffer : Enum, drawbuffer : Int, value : UInt*) : Void
  fun clearNamedFramebufferfv = glClearNamedFramebufferfv(framebuffer : UInt, buffer : Enum, drawbuffer : Int, value : Float*) : Void
  fun clearNamedFramebufferfi = glClearNamedFramebufferfi(framebuffer : UInt, buffer : Enum, drawbuffer : Int, depth : Float, stencil : Int) : Void
  fun blitNamedFramebuffer = glBlitNamedFramebuffer(readFramebuffer : UInt, drawFramebuffer : UInt, srcX0 : Int, srcY0 : Int, srcX1 : Int, srcY1 : Int, dstX0 : Int, dstY0 : Int, dstX1 : Int, dstY1 : Int, mask : BitField, filter : Enum) : Void
  fun checkNamedFramebufferStatus = glCheckNamedFramebufferStatus(framebuffer : UInt, target : Enum) : Enum
  fun getNamedFramebufferParameteriv = glGetNamedFramebufferParameteriv(framebuffer : UInt, pname : Enum, param : Int*) : Void
  fun getNamedFramebufferAttachmentParameteriv = glGetNamedFramebufferAttachmentParameteriv(framebuffer : UInt, attachment : Enum, pname : Enum, params : Int*) : Void
  fun createRenderbuffers = glCreateRenderbuffers(n : SizeI, renderbuffers : UInt*) : Void
  fun namedRenderbufferStorage = glNamedRenderbufferStorage(renderbuffer : UInt, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun namedRenderbufferStorageMultisample = glNamedRenderbufferStorageMultisample(renderbuffer : UInt, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun getNamedRenderbufferParameteriv = glGetNamedRenderbufferParameteriv(renderbuffer : UInt, pname : Enum, params : Int*) : Void
  fun createTextures = glCreateTextures(target : Enum, n : SizeI, textures : UInt*) : Void
  fun textureBuffer = glTextureBuffer(texture : UInt, internalformat : Enum, buffer : UInt) : Void
  fun textureBufferRange = glTextureBufferRange(texture : UInt, internalformat : Enum, buffer : UInt, offset : IntPtr, size : SizeIPtr) : Void
  fun textureStorage1D = glTextureStorage1D(texture : UInt, levels : SizeI, internalformat : Enum, width : SizeI) : Void
  fun textureStorage2D = glTextureStorage2D(texture : UInt, levels : SizeI, internalformat : Enum, width : SizeI, height : SizeI) : Void
  fun textureStorage3D = glTextureStorage3D(texture : UInt, levels : SizeI, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI) : Void
  fun textureStorage2DMultisample = glTextureStorage2DMultisample(texture : UInt, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, fixedsamplelocations : Boolean) : Void
  fun textureStorage3DMultisample = glTextureStorage3DMultisample(texture : UInt, samples : SizeI, internalformat : Enum, width : SizeI, height : SizeI, depth : SizeI, fixedsamplelocations : Boolean) : Void
  fun textureSubImage1D = glTextureSubImage1D(texture : UInt, level : Int, xoffset : Int, width : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun textureSubImage2D = glTextureSubImage2D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, width : SizeI, height : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun textureSubImage3D = glTextureSubImage3D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, type : Enum, pixels : Void**) : Void
  fun compressedTextureSubImage1D = glCompressedTextureSubImage1D(texture : UInt, level : Int, xoffset : Int, width : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun compressedTextureSubImage2D = glCompressedTextureSubImage2D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, width : SizeI, height : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun compressedTextureSubImage3D = glCompressedTextureSubImage3D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, imageSize : SizeI, data : Void**) : Void
  fun copyTextureSubImage1D = glCopyTextureSubImage1D(texture : UInt, level : Int, xoffset : Int, x : Int, y : Int, width : SizeI) : Void
  fun copyTextureSubImage2D = glCopyTextureSubImage2D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun copyTextureSubImage3D = glCopyTextureSubImage3D(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, x : Int, y : Int, width : SizeI, height : SizeI) : Void
  fun textureParameterf = glTextureParameterf(texture : UInt, pname : Enum, param : Float) : Void
  fun textureParameterfv = glTextureParameterfv(texture : UInt, pname : Enum, param : Float*) : Void
  fun textureParameteri = glTextureParameteri(texture : UInt, pname : Enum, param : Int) : Void
  fun textureParameterIiv = glTextureParameterIiv(texture : UInt, pname : Enum, params : Int*) : Void
  fun textureParameterIuiv = glTextureParameterIuiv(texture : UInt, pname : Enum, params : UInt*) : Void
  fun textureParameteriv = glTextureParameteriv(texture : UInt, pname : Enum, param : Int*) : Void
  fun generateTextureMipmap = glGenerateTextureMipmap(texture : UInt) : Void
  fun bindTextureUnit = glBindTextureUnit(unit : UInt, texture : UInt) : Void
  fun getTextureImage = glGetTextureImage(texture : UInt, level : Int, format : Enum, type : Enum, bufSize : SizeI, pixels : Void**) : Void
  fun getCompressedTextureImage = glGetCompressedTextureImage(texture : UInt, level : Int, bufSize : SizeI, pixels : Void**) : Void
  fun getTextureLevelParameterfv = glGetTextureLevelParameterfv(texture : UInt, level : Int, pname : Enum, params : Float*) : Void
  fun getTextureLevelParameteriv = glGetTextureLevelParameteriv(texture : UInt, level : Int, pname : Enum, params : Int*) : Void
  fun getTextureParameterfv = glGetTextureParameterfv(texture : UInt, pname : Enum, params : Float*) : Void
  fun getTextureParameterIiv = glGetTextureParameterIiv(texture : UInt, pname : Enum, params : Int*) : Void
  fun getTextureParameterIuiv = glGetTextureParameterIuiv(texture : UInt, pname : Enum, params : UInt*) : Void
  fun getTextureParameteriv = glGetTextureParameteriv(texture : UInt, pname : Enum, params : Int*) : Void
  fun createVertexArrays = glCreateVertexArrays(n : SizeI, arrays : UInt*) : Void
  fun disableVertexArrayAttrib = glDisableVertexArrayAttrib(vaobj : UInt, index : UInt) : Void
  fun enableVertexArrayAttrib = glEnableVertexArrayAttrib(vaobj : UInt, index : UInt) : Void
  fun vertexArrayElementBuffer = glVertexArrayElementBuffer(vaobj : UInt, buffer : UInt) : Void
  fun vertexArrayVertexBuffer = glVertexArrayVertexBuffer(vaobj : UInt, bindingindex : UInt, buffer : UInt, offset : IntPtr, stride : SizeI) : Void
  fun vertexArrayVertexBuffers = glVertexArrayVertexBuffers(vaobj : UInt, first : UInt, count : SizeI, buffers : UInt*, offsets : IntPtr*, strides : SizeI*) : Void
  fun vertexArrayAttribBinding = glVertexArrayAttribBinding(vaobj : UInt, attribindex : UInt, bindingindex : UInt) : Void
  fun vertexArrayAttribFormat = glVertexArrayAttribFormat(vaobj : UInt, attribindex : UInt, size : Int, type : Enum, normalized : Boolean, relativeoffset : UInt) : Void
  fun vertexArrayAttribIFormat = glVertexArrayAttribIFormat(vaobj : UInt, attribindex : UInt, size : Int, type : Enum, relativeoffset : UInt) : Void
  fun vertexArrayAttribLFormat = glVertexArrayAttribLFormat(vaobj : UInt, attribindex : UInt, size : Int, type : Enum, relativeoffset : UInt) : Void
  fun vertexArrayBindingDivisor = glVertexArrayBindingDivisor(vaobj : UInt, bindingindex : UInt, divisor : UInt) : Void
  fun getVertexArrayiv = glGetVertexArrayiv(vaobj : UInt, pname : Enum, param : Int*) : Void
  fun getVertexArrayIndexediv = glGetVertexArrayIndexediv(vaobj : UInt, index : UInt, pname : Enum, param : Int*) : Void
  fun getVertexArrayIndexed64iv = glGetVertexArrayIndexed64iv(vaobj : UInt, index : UInt, pname : Enum, param : Int64*) : Void
  fun createSamplers = glCreateSamplers(n : SizeI, samplers : UInt*) : Void
  fun createProgramPipelines = glCreateProgramPipelines(n : SizeI, pipelines : UInt*) : Void
  fun createQueries = glCreateQueries(target : Enum, n : SizeI, ids : UInt*) : Void
  fun getQueryBufferObjecti64v = glGetQueryBufferObjecti64v(id : UInt, buffer : UInt, pname : Enum, offset : IntPtr) : Void
  fun getQueryBufferObjectiv = glGetQueryBufferObjectiv(id : UInt, buffer : UInt, pname : Enum, offset : IntPtr) : Void
  fun getQueryBufferObjectui64v = glGetQueryBufferObjectui64v(id : UInt, buffer : UInt, pname : Enum, offset : IntPtr) : Void
  fun getQueryBufferObjectuiv = glGetQueryBufferObjectuiv(id : UInt, buffer : UInt, pname : Enum, offset : IntPtr) : Void
  fun memoryBarrierByRegion = glMemoryBarrierByRegion(barriers : BitField) : Void
  fun getTextureSubImage = glGetTextureSubImage(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, format : Enum, type : Enum, bufSize : SizeI, pixels : Void**) : Void
  fun getCompressedTextureSubImage = glGetCompressedTextureSubImage(texture : UInt, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : SizeI, height : SizeI, depth : SizeI, bufSize : SizeI, pixels : Void**) : Void
  fun getGraphicsResetStatus = glGetGraphicsResetStatus() : Enum
  fun getnCompressedTexImage = glGetnCompressedTexImage(target : Enum, lod : Int, bufSize : SizeI, pixels : Void**) : Void
  fun getnTexImage = glGetnTexImage(target : Enum, level : Int, format : Enum, type : Enum, bufSize : SizeI, pixels : Void**) : Void
  fun getnUniformdv = glGetnUniformdv(program : UInt, location : Int, bufSize : SizeI, params : Double*) : Void
  fun getnUniformfv = glGetnUniformfv(program : UInt, location : Int, bufSize : SizeI, params : Float*) : Void
  fun getnUniformiv = glGetnUniformiv(program : UInt, location : Int, bufSize : SizeI, params : Int*) : Void
  fun getnUniformuiv = glGetnUniformuiv(program : UInt, location : Int, bufSize : SizeI, params : UInt*) : Void
  fun readnPixels = glReadnPixels(x : Int, y : Int, width : SizeI, height : SizeI, format : Enum, type : Enum, bufSize : SizeI, data : Void**) : Void
  fun getnMapdv = glGetnMapdv(target : Enum, query : Enum, bufSize : SizeI, v : Double*) : Void
  fun getnMapfv = glGetnMapfv(target : Enum, query : Enum, bufSize : SizeI, v : Float*) : Void
  fun getnMapiv = glGetnMapiv(target : Enum, query : Enum, bufSize : SizeI, v : Int*) : Void
  fun getnPixelMapfv = glGetnPixelMapfv(map : Enum, bufSize : SizeI, values : Float*) : Void
  fun getnPixelMapuiv = glGetnPixelMapuiv(map : Enum, bufSize : SizeI, values : UInt*) : Void
  fun getnPixelMapusv = glGetnPixelMapusv(map : Enum, bufSize : SizeI, values : UShort*) : Void
  fun getnPolygonStipple = glGetnPolygonStipple(bufSize : SizeI, pattern : UByte*) : Void
  fun getnColorTable = glGetnColorTable(target : Enum, format : Enum, type : Enum, bufSize : SizeI, table : Void**) : Void
  fun getnConvolutionFilter = glGetnConvolutionFilter(target : Enum, format : Enum, type : Enum, bufSize : SizeI, image : Void**) : Void
  fun getnSeparableFilter = glGetnSeparableFilter(target : Enum, format : Enum, type : Enum, rowBufSize : SizeI, row : Void**, columnBufSize : SizeI, column : Void**, span : Void**) : Void
  fun getnHistogram = glGetnHistogram(target : Enum, reset : Boolean, format : Enum, type : Enum, bufSize : SizeI, values : Void**) : Void
  fun getnMinmax = glGetnMinmax(target : Enum, reset : Boolean, format : Enum, type : Enum, bufSize : SizeI, values : Void**) : Void
  fun textureBarrier = glTextureBarrier() : Void

end
